State 29 충돌: 2 쉬프트/리듀스
State 33 충돌: 2 쉬프트/리듀스
State 34 충돌: 2 쉬프트/리듀스
State 116 충돌: 1 쉬프트/리듀스
State 159 충돌: 1 쉬프트/리듀스
State 160 충돌: 1 쉬프트/리듀스
State 161 충돌: 1 쉬프트/리듀스
State 162 충돌: 1 쉬프트/리듀스
State 169 충돌: 1 쉬프트/리듀스
State 170 충돌: 1 쉬프트/리듀스
State 181 충돌: 1 쉬프트/리듀스
State 182 충돌: 1 쉬프트/리듀스
State 189 충돌: 1 쉬프트/리듀스
State 190 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: MAINPROG IDENT ";" declarations subprograms
    2        | MAINPROG error ";" declarations subprograms
    3        | MAINPROG IDENT error declarations subprograms
    4        | MAINPROG error declarations subprograms

    5 declarations: type identifier_list ";" declarations
    6             | type identifier_list error declarations
    7             | %empty

    8 identifier_list: IDENT init
    9                | IDENT init "," identifier_list
   10                | error

   11 init: ASS expr
   12     | %empty
   13     | ASS error

   14 type: standard_type
   15     | standard_type "[" NUMBER "]"
   16     | standard_type "[" NUMBER error

   17 standard_type: INT
   18              | FLOAT

   19 subprograms: subprogram subprograms
   20            | %empty

   21 subprogram: subprogram_head block

   22 subprogram_head: FUNCTION IDENT args ":" standard_type
   23                | FUNCTION error args ":" standard_type
   24                | FUNCTION IDENT args
   25                | FUNCTION error args

   26 args: "(" params ")"
   27     | "(" params error
   28     | %empty

   29 params: identifier_list ":" type
   30       | identifier_list error type
   31       | identifier_list ":" type ";" params
   32       | identifier_list error type ";" params

   33 block: BEG declarations stmts END
   34      | BEG declarations stmts error

   35 stmts: stmt stmts
   36      | %empty

   37 stmt: stmt_semi ";"
   38     | stmt_semi error
   39     | block
   40     | if
   41     | while
   42     | for

   43 stmt_semi: expr
   44          | RETURN expr
   45          | NOP

   46 if: IF expr ":" stmt elif else
   47   | IF expr error stmt elif else

   48 elif: ELIF expr ":" stmt elif
   49     | %empty
   50     | ELIF expr error stmt elif

   51 else: ELSE ":" stmt
   52     | %empty
   53     | ELSE error stmt

   54 while: WHILE expr ":" stmt else
   55      | WHILE expr error stmt else

   56 for: FOR expr IN expr ":" stmt else
   57    | FOR expr IN expr error stmt else

   58 variable: IDENT
   59         | IDENT "[" expr "]"
   60         | IDENT "[" expr error

   61 procedure: IDENT "(" expr_list ")"
   62          | IDENT "(" expr_list error

   63 expr_list: exprs
   64          | %empty

   65 exprs: expr
   66      | expr "," exprs
   67      | expr error exprs

   68 expr: term
   69     | expr ASS expr
   70     | expr GREATER expr
   71     | expr EQUGRE expr
   72     | expr LESS expr
   73     | expr EQULESS expr
   74     | expr EQUAL expr
   75     | expr NOTEQU expr
   76     | expr ADD expr
   77     | expr SUB expr
   78     | expr MUL expr
   79     | expr DIV expr
   80     | expr IN expr
   81     | ADD expr
   82     | SUB expr
   83     | NOT expr
   84     | expr ASS error
   85     | expr GREATER error
   86     | expr EQUGRE error
   87     | expr LESS error
   88     | expr EQULESS error
   89     | expr EQUAL error
   90     | expr NOTEQU error
   91     | expr ADD error
   92     | expr SUB error
   93     | expr MUL error
   94     | expr DIV error
   95     | expr IN error
   96     | ADD error
   97     | SUB error
   98     | NOT error

   99 term: NUMBER
  100     | variable
  101     | procedure
  102     | "(" expr ")"
  103     | "(" expr error
  104     | type term
  105     | type


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 4 6 10 13 16 23 25 27 30 32 34 38 47 50 53 55 57 60
    62 67 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 103
NUMBER (258) 15 16 99
IDENT (259) 1 3 8 9 22 24 58 59 60 61 62
ASS (260) 11 13 69 84
EQUAL (261) 74 89
NOTEQU (262) 75 90
GREATER (263) 70 85
EQUGRE (264) 71 86
LESS (265) 72 87
EQULESS (266) 73 88
IN (267) 56 57 80 95
ADD (268) 76 81 91 96
SUB (269) 77 82 92 97
MUL (270) 78 93
DIV (271) 79 94
UMINUS (272)
UPLUS (273)
NOT (274) 83 98
"(" (275) 26 27 61 62 102 103
")" (276) 26 61 102
"[" (277) 15 16 59 60
"]" (278) 15 59
"," (279) 9 66
";" (280) 1 2 5 31 32 37
":" (281) 22 23 29 31 46 48 51 54 56
MAINPROG (282) 1 2 3 4
FUNCTION (283) 22 23 24 25
BEG (284) 33 34
END (285) 33
IF (286) 46 47
ELIF (287) 48 50
ELSE (288) 51 53
NOP (289) 45
WHILE (290) 54 55
RETURN (291) 44
FOR (292) 56 57
INT (293) 17
FLOAT (294) 18


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1 2 3 4, on right: 0
declarations (42)
    on left: 5 6 7, on right: 1 2 3 4 5 6 33 34
identifier_list (43)
    on left: 8 9 10, on right: 5 6 9 29 30 31 32
init (44)
    on left: 11 12 13, on right: 8 9
type (45)
    on left: 14 15 16, on right: 5 6 29 30 31 32 104 105
standard_type (46)
    on left: 17 18, on right: 14 15 16 22 23
subprograms (47)
    on left: 19 20, on right: 1 2 3 4 19
subprogram (48)
    on left: 21, on right: 19
subprogram_head (49)
    on left: 22 23 24 25, on right: 21
args (50)
    on left: 26 27 28, on right: 22 23 24 25
params (51)
    on left: 29 30 31 32, on right: 26 27 31 32
block (52)
    on left: 33 34, on right: 21 39
stmts (53)
    on left: 35 36, on right: 33 34 35
stmt (54)
    on left: 37 38 39 40 41 42, on right: 35 46 47 48 50 51 53 54 55
    56 57
stmt_semi (55)
    on left: 43 44 45, on right: 37 38
if (56)
    on left: 46 47, on right: 40
elif (57)
    on left: 48 49 50, on right: 46 47 48 50
else (58)
    on left: 51 52 53, on right: 46 47 54 55 56 57
while (59)
    on left: 54 55, on right: 41
for (60)
    on left: 56 57, on right: 42
variable (61)
    on left: 58 59 60, on right: 100
procedure (62)
    on left: 61 62, on right: 101
expr_list (63)
    on left: 63 64, on right: 61 62
exprs (64)
    on left: 65 66 67, on right: 63 66 67
expr (65)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92 93 94 95 96 97 98, on right: 11 43 44 46 47
    48 50 54 55 56 57 59 60 65 66 67 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 102 103
term (66)
    on left: 99 100 101 102 103 104 105, on right: 68 104


State 0

    0 $accept: . program $end
    1 program: . MAINPROG IDENT ";" declarations subprograms
    2        | . MAINPROG error ";" declarations subprograms
    3        | . MAINPROG IDENT error declarations subprograms
    4        | . MAINPROG error declarations subprograms

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . IDENT ";" declarations subprograms
    2        | MAINPROG . error ";" declarations subprograms
    3        | MAINPROG . IDENT error declarations subprograms
    4        | MAINPROG . error declarations subprograms

    error  shift, and go to state 3
    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: MAINPROG error . ";" declarations subprograms
    4        | MAINPROG error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    ";"    shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 4

    1 program: MAINPROG IDENT . ";" declarations subprograms
    3        | MAINPROG IDENT . error declarations subprograms

    error  shift, and go to state 12
    ";"    shift, and go to state 13


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: MAINPROG error ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 14
    type           go to state 10
    standard_type  go to state 11


State 7

   17 standard_type: INT .

    $default  reduce using rule 17 (standard_type)


State 8

   18 standard_type: FLOAT .

    $default  reduce using rule 18 (standard_type)


State 9

    4 program: MAINPROG error declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 16
    subprogram       go to state 17
    subprogram_head  go to state 18


State 10

    5 declarations: type . identifier_list ";" declarations
    6             | type . identifier_list error declarations
    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 21


State 11

   14 type: standard_type .  [error, NUMBER, IDENT, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, "(", ")", "]", ",", ";", ":", INT, FLOAT]
   15     | standard_type . "[" NUMBER "]"
   16     | standard_type . "[" NUMBER error

    "["  shift, and go to state 22

    $default  reduce using rule 14 (type)


State 12

    3 program: MAINPROG IDENT error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 23
    type           go to state 10
    standard_type  go to state 11


State 13

    1 program: MAINPROG IDENT ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 24
    type           go to state 10
    standard_type  go to state 11


State 14

    2 program: MAINPROG error ";" declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 25
    subprogram       go to state 17
    subprogram_head  go to state 18


State 15

   22 subprogram_head: FUNCTION . IDENT args ":" standard_type
   23                | FUNCTION . error args ":" standard_type
   24                | FUNCTION . IDENT args
   25                | FUNCTION . error args

    error  shift, and go to state 26
    IDENT  shift, and go to state 27


State 16

    4 program: MAINPROG error declarations subprograms .

    $default  reduce using rule 4 (program)


State 17

   19 subprograms: . subprogram subprograms
   19            | subprogram . subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 28
    subprogram       go to state 17
    subprogram_head  go to state 18


State 18

   21 subprogram: subprogram_head . block
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error

    BEG  shift, and go to state 29

    block  go to state 30


State 19

   10 identifier_list: error .

    $default  reduce using rule 10 (identifier_list)


State 20

    8 identifier_list: IDENT . init
    9                | IDENT . init "," identifier_list
   11 init: . ASS expr
   12     | . %empty  [error, ",", ";", ":"]
   13     | . ASS error

    ASS  shift, and go to state 31

    $default  reduce using rule 12 (init)

    init  go to state 32


State 21

    5 declarations: type identifier_list . ";" declarations
    6             | type identifier_list . error declarations

    error  shift, and go to state 33
    ";"    shift, and go to state 34


State 22

   15 type: standard_type "[" . NUMBER "]"
   16     | standard_type "[" . NUMBER error

    NUMBER  shift, and go to state 35


State 23

    3 program: MAINPROG IDENT error declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 36
    subprogram       go to state 17
    subprogram_head  go to state 18


State 24

    1 program: MAINPROG IDENT ";" declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 37
    subprogram       go to state 17
    subprogram_head  go to state 18


State 25

    2 program: MAINPROG error ";" declarations subprograms .

    $default  reduce using rule 2 (program)


State 26

   23 subprogram_head: FUNCTION error . args ":" standard_type
   25                | FUNCTION error . args
   26 args: . "(" params ")"
   27     | . "(" params error
   28     | . %empty  [":", BEG]

    "("  shift, and go to state 38

    $default  reduce using rule 28 (args)

    args  go to state 39


State 27

   22 subprogram_head: FUNCTION IDENT . args ":" standard_type
   24                | FUNCTION IDENT . args
   26 args: . "(" params ")"
   27     | . "(" params error
   28     | . %empty  [":", BEG]

    "("  shift, and go to state 38

    $default  reduce using rule 28 (args)

    args  go to state 40


State 28

   19 subprograms: subprogram subprograms .

    $default  reduce using rule 19 (subprograms)


State 29

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: BEG . declarations stmts END
   34      | BEG . declarations stmts error

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 41
    type           go to state 10
    standard_type  go to state 11


State 30

   21 subprogram: subprogram_head block .

    $default  reduce using rule 21 (subprogram)


State 31

   11 init: ASS . expr
   13     | ASS . error
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 42
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 52
    term           go to state 53


State 32

    8 identifier_list: IDENT init .  [error, ";", ":"]
    9                | IDENT init . "," identifier_list

    ","  shift, and go to state 54

    $default  reduce using rule 8 (identifier_list)


State 33

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    6             | type identifier_list error . declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 55
    type           go to state 10
    standard_type  go to state 11


State 34

    5 declarations: . type identifier_list ";" declarations
    5             | type identifier_list ";" . declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 56
    type           go to state 10
    standard_type  go to state 11


State 35

   15 type: standard_type "[" NUMBER . "]"
   16     | standard_type "[" NUMBER . error

    error  shift, and go to state 57
    "]"    shift, and go to state 58


State 36

    3 program: MAINPROG IDENT error declarations subprograms .

    $default  reduce using rule 3 (program)


State 37

    1 program: MAINPROG IDENT ";" declarations subprograms .

    $default  reduce using rule 1 (program)


State 38

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   26 args: "(" . params ")"
   27     | "(" . params error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   32       | . identifier_list error type ";" params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 60


State 39

   23 subprogram_head: FUNCTION error args . ":" standard_type
   25                | FUNCTION error args .  [BEG]

    ":"  shift, and go to state 61

    $default  reduce using rule 25 (subprogram_head)


State 40

   22 subprogram_head: FUNCTION IDENT args . ":" standard_type
   24                | FUNCTION IDENT args .  [BEG]

    ":"  shift, and go to state 62

    $default  reduce using rule 24 (subprogram_head)


State 41

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   33      | BEG declarations . stmts END
   34      | . BEG declarations stmts error
   34      | BEG declarations . stmts error
   35 stmts: . stmt stmts
   36      | . %empty  [error, END]
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 36 (stmts)

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmts          go to state 69
    stmt           go to state 70
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 42

   13 init: ASS error .

    $default  reduce using rule 13 (init)


State 43

   99 term: NUMBER .

    $default  reduce using rule 99 (term)


State 44

   58 variable: IDENT .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   59         | IDENT . "[" expr "]"
   60         | IDENT . "[" expr error
   61 procedure: IDENT . "(" expr_list ")"
   62          | IDENT . "(" expr_list error

    "("  shift, and go to state 76
    "["  shift, and go to state 77

    $default  reduce using rule 58 (variable)


State 45

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   81     | ADD . expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   96     | ADD . error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 78
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 79
    term           go to state 53


State 46

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   82     | SUB . expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   97     | SUB . error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 80
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 81
    term           go to state 53


State 47

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   83     | NOT . expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   98     | NOT . error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 82
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 83
    term           go to state 53


State 48

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  102     | "(" . expr ")"
  103     | . "(" expr error
  103     | "(" . expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 84
    term           go to state 53


State 49

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  104     | type . term
  105     | . type
  105     | type .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 105 (term)

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    term           go to state 85


State 50

  100 term: variable .

    $default  reduce using rule 100 (term)


State 51

  101 term: procedure .

    $default  reduce using rule 101 (term)


State 52

   11 init: ASS expr .  [error, ",", ";", ":"]
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97

    $default  reduce using rule 11 (init)


State 53

   68 expr: term .

    $default  reduce using rule 68 (expr)


State 54

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
    9                | IDENT init "," . identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 98


State 55

    6 declarations: type identifier_list error declarations .

    $default  reduce using rule 6 (declarations)


State 56

    5 declarations: type identifier_list ";" declarations .

    $default  reduce using rule 5 (declarations)


State 57

   16 type: standard_type "[" NUMBER error .

    $default  reduce using rule 16 (type)


State 58

   15 type: standard_type "[" NUMBER "]" .

    $default  reduce using rule 15 (type)


State 59

   29 params: identifier_list . ":" type
   30       | identifier_list . error type
   31       | identifier_list . ":" type ";" params
   32       | identifier_list . error type ";" params

    error  shift, and go to state 99
    ":"    shift, and go to state 100


State 60

   26 args: "(" params . ")"
   27     | "(" params . error

    error  shift, and go to state 101
    ")"    shift, and go to state 102


State 61

   17 standard_type: . INT
   18              | . FLOAT
   23 subprogram_head: FUNCTION error args ":" . standard_type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    standard_type  go to state 103


State 62

   17 standard_type: . INT
   18              | . FLOAT
   22 subprogram_head: FUNCTION IDENT args ":" . standard_type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    standard_type  go to state 104


State 63

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   46 if: IF . expr ":" stmt elif else
   47   | IF . expr error stmt elif else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 105
    term           go to state 53


State 64

   45 stmt_semi: NOP .

    $default  reduce using rule 45 (stmt_semi)


State 65

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   54 while: WHILE . expr ":" stmt else
   55      | WHILE . expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 106
    term           go to state 53


State 66

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   44 stmt_semi: RETURN . expr
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 107
    term           go to state 53


State 67

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   56 for: FOR . expr IN expr ":" stmt else
   57    | FOR . expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 108
    term           go to state 53


State 68

   39 stmt: block .

    $default  reduce using rule 39 (stmt)


State 69

   33 block: BEG declarations stmts . END
   34      | BEG declarations stmts . error

    error  shift, and go to state 109
    END    shift, and go to state 110


State 70

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   35 stmts: . stmt stmts
   35      | stmt . stmts
   36      | . %empty  [error, END]
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 36 (stmts)

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmts          go to state 111
    stmt           go to state 70
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 71

   37 stmt: stmt_semi . ";"
   38     | stmt_semi . error

    error  shift, and go to state 112
    ";"    shift, and go to state 113


State 72

   40 stmt: if .

    $default  reduce using rule 40 (stmt)


State 73

   41 stmt: while .

    $default  reduce using rule 41 (stmt)


State 74

   42 stmt: for .

    $default  reduce using rule 42 (stmt)


State 75

   43 stmt_semi: expr .  [error, ";"]
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97

    $default  reduce using rule 43 (stmt_semi)


State 76

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   61          | IDENT "(" . expr_list ")"
   62          | . IDENT "(" expr_list error
   62          | IDENT "(" . expr_list error
   63 expr_list: . exprs
   64          | . %empty  [error, ")"]
   65 exprs: . expr
   66      | . expr "," exprs
   67      | . expr error exprs
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 64 (expr_list)

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr_list      go to state 114
    exprs          go to state 115
    expr           go to state 116
    term           go to state 53


State 77

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   59         | IDENT "[" . expr "]"
   60         | . IDENT "[" expr error
   60         | IDENT "[" . expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 117
    term           go to state 53


State 78

   96 expr: ADD error .

    $default  reduce using rule 96 (expr)


State 79

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   81     | ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    $default  reduce using rule 81 (expr)

    룰 81과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UPLUS).
    룰 81과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UPLUS).
    룰 81과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UPLUS).
    룰 81과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UPLUS).
    룰 81과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UPLUS).
    룰 81과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UPLUS).
    룰 81과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UPLUS).
    룰 81과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UPLUS).
    룰 81과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UPLUS).
    룰 81과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UPLUS).
    룰 81과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UPLUS).
    룰 81과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UPLUS).


State 80

   97 expr: SUB error .

    $default  reduce using rule 97 (expr)


State 81

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   82     | SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    $default  reduce using rule 82 (expr)

    룰 82과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UMINUS).
    룰 82과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UMINUS).
    룰 82과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UMINUS).
    룰 82과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UMINUS).
    룰 82과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UMINUS).
    룰 82과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UMINUS).
    룰 82과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UMINUS).
    룰 82과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UMINUS).
    룰 82과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UMINUS).
    룰 82과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UMINUS).
    룰 82과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UMINUS).
    룰 82과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UMINUS).


State 82

   98 expr: NOT error .

    $default  reduce using rule 98 (expr)


State 83

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   83     | NOT expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    $default  reduce using rule 83 (expr)

    룰 83과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOT).
    룰 83과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < NOT).
    룰 83과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < NOT).
    룰 83과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < NOT).
    룰 83과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < NOT).
    룰 83과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < NOT).
    룰 83과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < NOT).
    룰 83과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < NOT).
    룰 83과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < NOT).
    룰 83과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < NOT).
    룰 83과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < NOT).
    룰 83과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < NOT).


State 84

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error
  102 term: "(" expr . ")"
  103     | "(" expr . error

    error    shift, and go to state 118
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    ")"      shift, and go to state 119


State 85

  104 term: type term .

    $default  reduce using rule 104 (term)


State 86

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   69     | expr ASS . expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   84     | expr ASS . error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 120
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 121
    term           go to state 53


State 87

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   74     | expr EQUAL . expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   89     | expr EQUAL . error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 122
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 123
    term           go to state 53


State 88

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   75     | expr NOTEQU . expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   90     | expr NOTEQU . error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 124
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 125
    term           go to state 53


State 89

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   70     | expr GREATER . expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   85     | expr GREATER . error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 126
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 127
    term           go to state 53


State 90

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   71     | expr EQUGRE . expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   86     | expr EQUGRE . error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 128
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 129
    term           go to state 53


State 91

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   72     | expr LESS . expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   87     | expr LESS . error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 130
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 131
    term           go to state 53


State 92

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   73     | expr EQULESS . expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   88     | expr EQULESS . error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 132
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 133
    term           go to state 53


State 93

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   80     | expr IN . expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   95     | expr IN . error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 134
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 135
    term           go to state 53


State 94

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   76     | expr ADD . expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   91     | expr ADD . error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 136
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 137
    term           go to state 53


State 95

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   77     | expr SUB . expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   92     | expr SUB . error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 138
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 139
    term           go to state 53


State 96

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   78     | expr MUL . expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   93     | expr MUL . error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 140
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 141
    term           go to state 53


State 97

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   79     | expr DIV . expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   94     | expr DIV . error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 142
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 143
    term           go to state 53


State 98

    9 identifier_list: IDENT init "," identifier_list .

    $default  reduce using rule 9 (identifier_list)


State 99

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   30 params: identifier_list error . type
   32       | identifier_list error . type ";" params

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 144
    standard_type  go to state 11


State 100

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   29 params: identifier_list ":" . type
   31       | identifier_list ":" . type ";" params

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 145
    standard_type  go to state 11


State 101

   27 args: "(" params error .

    $default  reduce using rule 27 (args)


State 102

   26 args: "(" params ")" .

    $default  reduce using rule 26 (args)


State 103

   23 subprogram_head: FUNCTION error args ":" standard_type .

    $default  reduce using rule 23 (subprogram_head)


State 104

   22 subprogram_head: FUNCTION IDENT args ":" standard_type .

    $default  reduce using rule 22 (subprogram_head)


State 105

   46 if: IF expr . ":" stmt elif else
   47   | IF expr . error stmt elif else
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error    shift, and go to state 146
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    ":"      shift, and go to state 147


State 106

   54 while: WHILE expr . ":" stmt else
   55      | WHILE expr . error stmt else
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error    shift, and go to state 148
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    ":"      shift, and go to state 149


State 107

   44 stmt_semi: RETURN expr .  [error, ";"]
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97

    $default  reduce using rule 44 (stmt_semi)


State 108

   56 for: FOR expr . IN expr ":" stmt else
   57    | FOR expr . IN expr error stmt else
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 150
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97


State 109

   34 block: BEG declarations stmts error .

    $default  reduce using rule 34 (block)


State 110

   33 block: BEG declarations stmts END .

    $default  reduce using rule 33 (block)


State 111

   35 stmts: stmt stmts .

    $default  reduce using rule 35 (stmts)


State 112

   38 stmt: stmt_semi error .

    $default  reduce using rule 38 (stmt)


State 113

   37 stmt: stmt_semi ";" .

    $default  reduce using rule 37 (stmt)


State 114

   61 procedure: IDENT "(" expr_list . ")"
   62          | IDENT "(" expr_list . error

    error  shift, and go to state 151
    ")"    shift, and go to state 152


State 115

   63 expr_list: exprs .

    $default  reduce using rule 63 (expr_list)


State 116

   65 exprs: expr .  [error, ")"]
   66      | expr . "," exprs
   67      | expr . error exprs
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error    shift, and go to state 153
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    ","      shift, and go to state 154

    error  [reduce using rule 65 (exprs)]
    ")"    reduce using rule 65 (exprs)


State 117

   59 variable: IDENT "[" expr . "]"
   60         | IDENT "[" expr . error
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error    shift, and go to state 155
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    "]"      shift, and go to state 156


State 118

  103 term: "(" expr error .

    $default  reduce using rule 103 (term)


State 119

  102 term: "(" expr ")" .

    $default  reduce using rule 102 (term)


State 120

   84 expr: expr ASS error .

    $default  reduce using rule 84 (expr)


State 121

   69 expr: expr . ASS expr
   69     | expr ASS expr .  [error, ASS, ")", "]", ",", ";", ":"]
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97

    $default  reduce using rule 69 (expr)

    룰 69과 토큰 ASS의 충돌이 리듀스로 결정됨 (%left ASS).
    룰 69과 토큰 EQUAL의 충돌이 쉬프트로 결정됨 (ASS < EQUAL).
    룰 69과 토큰 NOTEQU의 충돌이 쉬프트로 결정됨 (ASS < NOTEQU).
    룰 69과 토큰 GREATER의 충돌이 쉬프트로 결정됨 (ASS < GREATER).
    룰 69과 토큰 EQUGRE의 충돌이 쉬프트로 결정됨 (ASS < EQUGRE).
    룰 69과 토큰 LESS의 충돌이 쉬프트로 결정됨 (ASS < LESS).
    룰 69과 토큰 EQULESS의 충돌이 쉬프트로 결정됨 (ASS < EQULESS).
    룰 69과 토큰 IN의 충돌이 쉬프트로 결정됨 (ASS < IN).
    룰 69과 토큰 ADD의 충돌이 쉬프트로 결정됨 (ASS < ADD).
    룰 69과 토큰 SUB의 충돌이 쉬프트로 결정됨 (ASS < SUB).
    룰 69과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ASS < MUL).
    룰 69과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ASS < DIV).


State 122

   89 expr: expr EQUAL error .

    $default  reduce using rule 89 (expr)


State 123

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   74     | expr EQUAL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 74 (expr)

    룰 74과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUAL).
    룰 74과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 74과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 74과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 74과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 74과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 74과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 74과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 74과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUAL < ADD).
    룰 74과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUAL < SUB).
    룰 74과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUAL < MUL).
    룰 74과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUAL < DIV).


State 124

   90 expr: expr NOTEQU error .

    $default  reduce using rule 90 (expr)


State 125

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   75     | expr NOTEQU expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 75 (expr)

    룰 75과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOTEQU).
    룰 75과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 75과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 75과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 75과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 75과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 75과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 75과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 75과 토큰 ADD의 충돌이 쉬프트로 결정됨 (NOTEQU < ADD).
    룰 75과 토큰 SUB의 충돌이 쉬프트로 결정됨 (NOTEQU < SUB).
    룰 75과 토큰 MUL의 충돌이 쉬프트로 결정됨 (NOTEQU < MUL).
    룰 75과 토큰 DIV의 충돌이 쉬프트로 결정됨 (NOTEQU < DIV).


State 126

   85 expr: expr GREATER error .

    $default  reduce using rule 85 (expr)


State 127

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   70     | expr GREATER expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 70 (expr)

    룰 70과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < GREATER).
    룰 70과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 70과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 70과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 70과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 70과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 70과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 70과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 70과 토큰 ADD의 충돌이 쉬프트로 결정됨 (GREATER < ADD).
    룰 70과 토큰 SUB의 충돌이 쉬프트로 결정됨 (GREATER < SUB).
    룰 70과 토큰 MUL의 충돌이 쉬프트로 결정됨 (GREATER < MUL).
    룰 70과 토큰 DIV의 충돌이 쉬프트로 결정됨 (GREATER < DIV).


State 128

   86 expr: expr EQUGRE error .

    $default  reduce using rule 86 (expr)


State 129

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   71     | expr EQUGRE expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 71 (expr)

    룰 71과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUGRE).
    룰 71과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 71과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 71과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 71과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 71과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 71과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 71과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 71과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUGRE < ADD).
    룰 71과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUGRE < SUB).
    룰 71과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUGRE < MUL).
    룰 71과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUGRE < DIV).


State 130

   87 expr: expr LESS error .

    $default  reduce using rule 87 (expr)


State 131

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   72     | expr LESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 72 (expr)

    룰 72과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < LESS).
    룰 72과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 72과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 72과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 72과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 72과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 72과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 72과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 72과 토큰 ADD의 충돌이 쉬프트로 결정됨 (LESS < ADD).
    룰 72과 토큰 SUB의 충돌이 쉬프트로 결정됨 (LESS < SUB).
    룰 72과 토큰 MUL의 충돌이 쉬프트로 결정됨 (LESS < MUL).
    룰 72과 토큰 DIV의 충돌이 쉬프트로 결정됨 (LESS < DIV).


State 132

   88 expr: expr EQULESS error .

    $default  reduce using rule 88 (expr)


State 133

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   73     | expr EQULESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 73 (expr)

    룰 73과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQULESS).
    룰 73과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 73과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 73과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 73과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 73과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 73과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 73과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 73과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQULESS < ADD).
    룰 73과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQULESS < SUB).
    룰 73과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQULESS < MUL).
    룰 73과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQULESS < DIV).


State 134

   95 expr: expr IN error .

    $default  reduce using rule 95 (expr)


State 135

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   80     | expr IN expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95
    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 80 (expr)

    룰 80과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 80과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 80과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 80과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 80과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 80과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 80과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 80과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 80과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 80과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 80과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 80과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 136

   91 expr: expr ADD error .

    $default  reduce using rule 91 (expr)


State 137

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   76     | expr ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 76 (expr)

    룰 76과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < ADD).
    룰 76과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < ADD).
    룰 76과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < ADD).
    룰 76과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < ADD).
    룰 76과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < ADD).
    룰 76과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < ADD).
    룰 76과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < ADD).
    룰 76과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < ADD).
    룰 76과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 76과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 76과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ADD < MUL).
    룰 76과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ADD < DIV).


State 138

   92 expr: expr SUB error .

    $default  reduce using rule 92 (expr)


State 139

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   77     | expr SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    MUL  shift, and go to state 96
    DIV  shift, and go to state 97

    $default  reduce using rule 77 (expr)

    룰 77과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < SUB).
    룰 77과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < SUB).
    룰 77과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < SUB).
    룰 77과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < SUB).
    룰 77과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < SUB).
    룰 77과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < SUB).
    룰 77과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < SUB).
    룰 77과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < SUB).
    룰 77과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 77과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 77과 토큰 MUL의 충돌이 쉬프트로 결정됨 (SUB < MUL).
    룰 77과 토큰 DIV의 충돌이 쉬프트로 결정됨 (SUB < DIV).


State 140

   93 expr: expr MUL error .

    $default  reduce using rule 93 (expr)


State 141

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   78     | expr MUL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    $default  reduce using rule 78 (expr)

    룰 78과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < MUL).
    룰 78과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < MUL).
    룰 78과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < MUL).
    룰 78과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < MUL).
    룰 78과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < MUL).
    룰 78과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < MUL).
    룰 78과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < MUL).
    룰 78과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < MUL).
    룰 78과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < MUL).
    룰 78과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < MUL).
    룰 78과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 78과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 142

   94 expr: expr DIV error .

    $default  reduce using rule 94 (expr)


State 143

   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   79     | expr DIV expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    $default  reduce using rule 79 (expr)

    룰 79과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < DIV).
    룰 79과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < DIV).
    룰 79과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < DIV).
    룰 79과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < DIV).
    룰 79과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < DIV).
    룰 79과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < DIV).
    룰 79과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < DIV).
    룰 79과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < DIV).
    룰 79과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < DIV).
    룰 79과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < DIV).
    룰 79과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 79과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 144

   30 params: identifier_list error type .  [error, ")"]
   32       | identifier_list error type . ";" params

    ";"  shift, and go to state 157

    $default  reduce using rule 30 (params)


State 145

   29 params: identifier_list ":" type .  [error, ")"]
   31       | identifier_list ":" type . ";" params

    ";"  shift, and go to state 158

    $default  reduce using rule 29 (params)


State 146

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   47   | IF expr error . stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 159
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 147

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   46   | IF expr ":" . stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 160
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 148

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   55      | WHILE expr error . stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 161
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 149

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   54      | WHILE expr ":" . stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 162
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 150

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   56 for: FOR expr IN . expr ":" stmt else
   57    | FOR expr IN . expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   80     | expr IN . expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   95     | expr IN . error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    error   shift, and go to state 134
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 163
    term           go to state 53


State 151

   62 procedure: IDENT "(" expr_list error .

    $default  reduce using rule 62 (procedure)


State 152

   61 procedure: IDENT "(" expr_list ")" .

    $default  reduce using rule 61 (procedure)


State 153

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   65 exprs: . expr
   66      | . expr "," exprs
   67      | . expr error exprs
   67      | expr error . exprs
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    exprs          go to state 164
    expr           go to state 116
    term           go to state 53


State 154

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   65 exprs: . expr
   66      | . expr "," exprs
   66      | expr "," . exprs
   67      | . expr error exprs
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    exprs          go to state 165
    expr           go to state 116
    term           go to state 53


State 155

   60 variable: IDENT "[" expr error .

    $default  reduce using rule 60 (variable)


State 156

   59 variable: IDENT "[" expr "]" .

    $default  reduce using rule 59 (variable)


State 157

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   32       | . identifier_list error type ";" params
   32       | identifier_list error type ";" . params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 166


State 158

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   31       | identifier_list ":" type ";" . params
   32       | . identifier_list error type ";" params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 167


State 159

   47 if: IF expr error stmt . elif else
   48 elif: . ELIF expr ":" stmt elif
   49     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   50     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 168

    ELIF      [reduce using rule 49 (elif)]
    $default  reduce using rule 49 (elif)

    elif  go to state 169


State 160

   46 if: IF expr ":" stmt . elif else
   48 elif: . ELIF expr ":" stmt elif
   49     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   50     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 168

    ELIF      [reduce using rule 49 (elif)]
    $default  reduce using rule 49 (elif)

    elif  go to state 170


State 161

   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt
   55 while: WHILE expr error stmt . else

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 172


State 162

   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt
   54 while: WHILE expr ":" stmt . else

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 173


State 163

   56 for: FOR expr IN expr . ":" stmt else
   57    | FOR expr IN expr . error stmt else
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   80     | expr IN expr .  [ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN]
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error  shift, and go to state 174
    ADD    shift, and go to state 94
    SUB    shift, and go to state 95
    MUL    shift, and go to state 96
    DIV    shift, and go to state 97
    ":"    shift, and go to state 175

    ASS      reduce using rule 80 (expr)
    EQUAL    reduce using rule 80 (expr)
    NOTEQU   reduce using rule 80 (expr)
    GREATER  reduce using rule 80 (expr)
    EQUGRE   reduce using rule 80 (expr)
    LESS     reduce using rule 80 (expr)
    EQULESS  reduce using rule 80 (expr)
    IN       reduce using rule 80 (expr)

    룰 80과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 80과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 80과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 80과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 80과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 80과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 80과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 80과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 80과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 80과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 80과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 80과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 164

   67 exprs: expr error exprs .

    $default  reduce using rule 67 (exprs)


State 165

   66 exprs: expr "," exprs .

    $default  reduce using rule 66 (exprs)


State 166

   32 params: identifier_list error type ";" params .

    $default  reduce using rule 32 (params)


State 167

   31 params: identifier_list ":" type ";" params .

    $default  reduce using rule 31 (params)


State 168

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   48 elif: ELIF . expr ":" stmt elif
   50     | ELIF . expr error stmt elif
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 176
    term           go to state 53


State 169

   47 if: IF expr error stmt elif . else
   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 177


State 170

   46 if: IF expr ":" stmt elif . else
   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 178


State 171

   51 else: ELSE . ":" stmt
   53     | ELSE . error stmt

    error  shift, and go to state 179
    ":"    shift, and go to state 180


State 172

   55 while: WHILE expr error stmt else .

    $default  reduce using rule 55 (while)


State 173

   54 while: WHILE expr ":" stmt else .

    $default  reduce using rule 54 (while)


State 174

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   57    | FOR expr IN expr error . stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 181
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 175

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   56    | FOR expr IN expr ":" . stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 182
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 176

   48 elif: ELIF expr . ":" stmt elif
   50     | ELIF expr . error stmt elif
   69 expr: expr . ASS expr
   70     | expr . GREATER expr
   71     | expr . EQUGRE expr
   72     | expr . LESS expr
   73     | expr . EQULESS expr
   74     | expr . EQUAL expr
   75     | expr . NOTEQU expr
   76     | expr . ADD expr
   77     | expr . SUB expr
   78     | expr . MUL expr
   79     | expr . DIV expr
   80     | expr . IN expr
   84     | expr . ASS error
   85     | expr . GREATER error
   86     | expr . EQUGRE error
   87     | expr . LESS error
   88     | expr . EQULESS error
   89     | expr . EQUAL error
   90     | expr . NOTEQU error
   91     | expr . ADD error
   92     | expr . SUB error
   93     | expr . MUL error
   94     | expr . DIV error
   95     | expr . IN error

    error    shift, and go to state 183
    ASS      shift, and go to state 86
    EQUAL    shift, and go to state 87
    NOTEQU   shift, and go to state 88
    GREATER  shift, and go to state 89
    EQUGRE   shift, and go to state 90
    LESS     shift, and go to state 91
    EQULESS  shift, and go to state 92
    IN       shift, and go to state 93
    ADD      shift, and go to state 94
    SUB      shift, and go to state 95
    MUL      shift, and go to state 96
    DIV      shift, and go to state 97
    ":"      shift, and go to state 184


State 177

   47 if: IF expr error stmt elif else .

    $default  reduce using rule 47 (if)


State 178

   46 if: IF expr ":" stmt elif else .

    $default  reduce using rule 46 (if)


State 179

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   53 else: ELSE error . stmt
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 185
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 180

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   51 else: ELSE ":" . stmt
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 186
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 181

   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt
   57 for: FOR expr IN expr error stmt . else

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 187


State 182

   51 else: . ELSE ":" stmt
   52     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   53     | . ELSE error stmt
   56 for: FOR expr IN expr ":" stmt . else

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 52 (else)]
    $default  reduce using rule 52 (else)

    else  go to state 188


State 183

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   50 elif: ELIF expr error . stmt elif
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 189
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 184

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . RETURN expr
   45          | . NOP
   46 if: . IF expr ":" stmt elif else
   47   | . IF expr error stmt elif else
   48 elif: ELIF expr ":" . stmt elif
   54 while: . WHILE expr ":" stmt else
   55      | . WHILE expr error stmt else
   56 for: . FOR expr IN expr ":" stmt else
   57    | . FOR expr IN expr error stmt else
   58 variable: . IDENT
   59         | . IDENT "[" expr "]"
   60         | . IDENT "[" expr error
   61 procedure: . IDENT "(" expr_list ")"
   62          | . IDENT "(" expr_list error
   68 expr: . term
   69     | . expr ASS expr
   70     | . expr GREATER expr
   71     | . expr EQUGRE expr
   72     | . expr LESS expr
   73     | . expr EQULESS expr
   74     | . expr EQUAL expr
   75     | . expr NOTEQU expr
   76     | . expr ADD expr
   77     | . expr SUB expr
   78     | . expr MUL expr
   79     | . expr DIV expr
   80     | . expr IN expr
   81     | . ADD expr
   82     | . SUB expr
   83     | . NOT expr
   84     | . expr ASS error
   85     | . expr GREATER error
   86     | . expr EQUGRE error
   87     | . expr LESS error
   88     | . expr EQULESS error
   89     | . expr EQUAL error
   90     | . expr NOTEQU error
   91     | . expr ADD error
   92     | . expr SUB error
   93     | . expr MUL error
   94     | . expr DIV error
   95     | . expr IN error
   96     | . ADD error
   97     | . SUB error
   98     | . NOT error
   99 term: . NUMBER
  100     | . variable
  101     | . procedure
  102     | . "(" expr ")"
  103     | . "(" expr error
  104     | . type term
  105     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    BEG     shift, and go to state 29
    IF      shift, and go to state 63
    NOP     shift, and go to state 64
    WHILE   shift, and go to state 65
    RETURN  shift, and go to state 66
    FOR     shift, and go to state 67
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 68
    stmt           go to state 190
    stmt_semi      go to state 71
    if             go to state 72
    while          go to state 73
    for            go to state 74
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 75
    term           go to state 53


State 185

   53 else: ELSE error stmt .

    $default  reduce using rule 53 (else)


State 186

   51 else: ELSE ":" stmt .

    $default  reduce using rule 51 (else)


State 187

   57 for: FOR expr IN expr error stmt else .

    $default  reduce using rule 57 (for)


State 188

   56 for: FOR expr IN expr ":" stmt else .

    $default  reduce using rule 56 (for)


State 189

   48 elif: . ELIF expr ":" stmt elif
   49     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   50     | . ELIF expr error stmt elif
   50     | ELIF expr error stmt . elif

    ELIF  shift, and go to state 168

    ELIF      [reduce using rule 49 (elif)]
    $default  reduce using rule 49 (elif)

    elif  go to state 191


State 190

   48 elif: . ELIF expr ":" stmt elif
   48     | ELIF expr ":" stmt . elif
   49     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, ELIF, ELSE, NOP, WHILE, RETURN, FOR, INT, FLOAT]
   50     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 168

    ELIF      [reduce using rule 49 (elif)]
    $default  reduce using rule 49 (elif)

    elif  go to state 192


State 191

   50 elif: ELIF expr error stmt elif .

    $default  reduce using rule 50 (elif)


State 192

   48 elif: ELIF expr ":" stmt elif .

    $default  reduce using rule 48 (elif)
