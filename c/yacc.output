Terminals unused in grammar

   PROCEDURE


State 111 충돌: 1 쉬프트/리듀스
State 112 충돌: 1 쉬프트/리듀스
State 117 충돌: 1 쉬프트/리듀스
State 125 충돌: 1 쉬프트/리듀스
State 129 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: MAINPROG IDENT ";" declarations subprograms block

    2 declarations: type identifier_list ";" declarations
    3             | %empty

    4 identifier_list: IDENT
    5                | IDENT "," identifier_list

    6 type: standard_type
    7     | standard_type "[" NUMBER "]"

    8 standard_type: INT
    9              | FLOAT

   10 subprograms: subprogram subprograms
   11            | %empty

   12 subprogram: subprogram_head declarations block

   13 subprogram_head: FUNCTION IDENT args ":" standard_type
   14                | FUNCTION IDENT args ";"

   15 args: "(" params ")"
   16     | %empty

   17 params: identifier_list ":" type
   18       | identifier_list ":" type ";" params

   19 block: BEG stmts END

   20 stmts: stmt stmts
   21      | %empty

   22 stmt: stmt_semi ";"
   23     | block
   24     | if
   25     | while
   26     | for

   27 stmt_semi: variable ASS expr
   28          | procedure
   29          | RETURN expr
   30          | NOP

   31 if: IF expr ":" stmt elif else

   32 elif: ELIF expr ":" stmt elif
   33     | %empty

   34 else: ELSE ":" stmt
   35     | %empty

   36 while: WHILE expr ":" stmt else

   37 for: FOR expr IN expr ":" stmt else

   38 variable: IDENT
   39         | IDENT "[" expr "]"

   40 procedure: IDENT "(" expr_list ")"

   41 expr_list: exprs
   42          | %empty

   43 exprs: expr
   44      | expr "," exprs

   45 expr: term
   46     | expr GREATER expr
   47     | expr EQUGRE expr
   48     | expr LESS expr
   49     | expr EQULESS expr
   50     | expr EQUAL expr
   51     | expr NOTEQU expr
   52     | expr ADD expr
   53     | expr SUB expr
   54     | expr MUL expr
   55     | expr DIV expr
   56     | expr IN expr
   57     | ADD expr
   58     | SUB expr
   59     | NOT expr

   60 term: NUMBER
   61     | variable
   62     | procedure
   63     | "(" expr ")"


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 7 60
IDENT (259) 1 4 5 13 14 38 39 40
ASS (260) 27
EQUAL (261) 50
NOTEQU (262) 51
GREATER (263) 46
EQUGRE (264) 47
LESS (265) 48
EQULESS (266) 49
IN (267) 37 56
ADD (268) 52 57
SUB (269) 53 58
MUL (270) 54
DIV (271) 55
UMINUS (272)
UPLUS (273)
NOT (274) 59
"(" (275) 15 40 63
")" (276) 15 40 63
"[" (277) 7 39
"]" (278) 7 39
"," (279) 5 44
";" (280) 1 2 14 18 22
":" (281) 13 17 18 31 32 34 36 37
MAINPROG (282) 1
FUNCTION (283) 13 14
PROCEDURE (284)
BEG (285) 19
END (286) 19
IF (287) 31
ELIF (288) 32
ELSE (289) 34
NOP (290) 30
WHILE (291) 36
RETURN (292) 29
FOR (293) 37
INT (294) 8
FLOAT (295) 9


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
declarations (43)
    on left: 2 3, on right: 1 2 12
identifier_list (44)
    on left: 4 5, on right: 2 5 17 18
type (45)
    on left: 6 7, on right: 2 17 18
standard_type (46)
    on left: 8 9, on right: 6 7 13
subprograms (47)
    on left: 10 11, on right: 1 10
subprogram (48)
    on left: 12, on right: 10
subprogram_head (49)
    on left: 13 14, on right: 12
args (50)
    on left: 15 16, on right: 13 14
params (51)
    on left: 17 18, on right: 15 18
block (52)
    on left: 19, on right: 1 12 23
stmts (53)
    on left: 20 21, on right: 19 20
stmt (54)
    on left: 22 23 24 25 26, on right: 20 31 32 34 36 37
stmt_semi (55)
    on left: 27 28 29 30, on right: 22
if (56)
    on left: 31, on right: 24
elif (57)
    on left: 32 33, on right: 31 32
else (58)
    on left: 34 35, on right: 31 36 37
while (59)
    on left: 36, on right: 25
for (60)
    on left: 37, on right: 26
variable (61)
    on left: 38 39, on right: 27 61
procedure (62)
    on left: 40, on right: 28 62
expr_list (63)
    on left: 41 42, on right: 40
exprs (64)
    on left: 43 44, on right: 41 44
expr (65)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59, on right:
    27 29 31 32 36 37 39 43 44 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 63
term (66)
    on left: 60 61 62 63, on right: 45


State 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . IDENT ";" declarations subprograms block

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPROG IDENT . ";" declarations subprograms block

    ";"  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: MAINPROG IDENT ";" . declarations subprograms block

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


State 6

    8 standard_type: INT .

    $default  reduce using rule 8 (standard_type)


State 7

    9 standard_type: FLOAT .

    $default  reduce using rule 9 (standard_type)


State 8

    1 program: MAINPROG IDENT ";" declarations . subprograms block

    FUNCTION  shift, and go to state 11

    $default  reduce using rule 11 (subprograms)

    subprograms      go to state 12
    subprogram       go to state 13
    subprogram_head  go to state 14


State 9

    2 declarations: type . identifier_list ";" declarations

    IDENT  shift, and go to state 15

    identifier_list  go to state 16


State 10

    6 type: standard_type .
    7     | standard_type . "[" NUMBER "]"

    "["  shift, and go to state 17

    $default  reduce using rule 6 (type)


State 11

   13 subprogram_head: FUNCTION . IDENT args ":" standard_type
   14                | FUNCTION . IDENT args ";"

    IDENT  shift, and go to state 18


State 12

    1 program: MAINPROG IDENT ";" declarations subprograms . block

    BEG  shift, and go to state 19

    block  go to state 20


State 13

   10 subprograms: subprogram . subprograms

    FUNCTION  shift, and go to state 11

    $default  reduce using rule 11 (subprograms)

    subprograms      go to state 21
    subprogram       go to state 13
    subprogram_head  go to state 14


State 14

   12 subprogram: subprogram_head . declarations block

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 22
    type           go to state 9
    standard_type  go to state 10


State 15

    4 identifier_list: IDENT .
    5                | IDENT . "," identifier_list

    ","  shift, and go to state 23

    $default  reduce using rule 4 (identifier_list)


State 16

    2 declarations: type identifier_list . ";" declarations

    ";"  shift, and go to state 24


State 17

    7 type: standard_type "[" . NUMBER "]"

    NUMBER  shift, and go to state 25


State 18

   13 subprogram_head: FUNCTION IDENT . args ":" standard_type
   14                | FUNCTION IDENT . args ";"

    "("  shift, and go to state 26

    $default  reduce using rule 16 (args)

    args  go to state 27


State 19

   19 block: BEG . stmts END

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    $default  reduce using rule 21 (stmts)

    block      go to state 34
    stmts      go to state 35
    stmt       go to state 36
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 20

    1 program: MAINPROG IDENT ";" declarations subprograms block .

    $default  reduce using rule 1 (program)


State 21

   10 subprograms: subprogram subprograms .

    $default  reduce using rule 10 (subprograms)


State 22

   12 subprogram: subprogram_head declarations . block

    BEG  shift, and go to state 19

    block  go to state 43


State 23

    5 identifier_list: IDENT "," . identifier_list

    IDENT  shift, and go to state 15

    identifier_list  go to state 44


State 24

    2 declarations: type identifier_list ";" . declarations

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 45
    type           go to state 9
    standard_type  go to state 10


State 25

    7 type: standard_type "[" NUMBER . "]"

    "]"  shift, and go to state 46


State 26

   15 args: "(" . params ")"

    IDENT  shift, and go to state 15

    identifier_list  go to state 47
    params           go to state 48


State 27

   13 subprogram_head: FUNCTION IDENT args . ":" standard_type
   14                | FUNCTION IDENT args . ";"

    ";"  shift, and go to state 49
    ":"  shift, and go to state 50


State 28

   38 variable: IDENT .
   39         | IDENT . "[" expr "]"
   40 procedure: IDENT . "(" expr_list ")"

    "("  shift, and go to state 51
    "["  shift, and go to state 52

    $default  reduce using rule 38 (variable)


State 29

   31 if: IF . expr ":" stmt elif else

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 60
    term       go to state 61


State 30

   30 stmt_semi: NOP .

    $default  reduce using rule 30 (stmt_semi)


State 31

   36 while: WHILE . expr ":" stmt else

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 62
    term       go to state 61


State 32

   29 stmt_semi: RETURN . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 63
    term       go to state 61


State 33

   37 for: FOR . expr IN expr ":" stmt else

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 64
    term       go to state 61


State 34

   23 stmt: block .

    $default  reduce using rule 23 (stmt)


State 35

   19 block: BEG stmts . END

    END  shift, and go to state 65


State 36

   20 stmts: stmt . stmts

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    $default  reduce using rule 21 (stmts)

    block      go to state 34
    stmts      go to state 66
    stmt       go to state 36
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 37

   22 stmt: stmt_semi . ";"

    ";"  shift, and go to state 67


State 38

   24 stmt: if .

    $default  reduce using rule 24 (stmt)


State 39

   25 stmt: while .

    $default  reduce using rule 25 (stmt)


State 40

   26 stmt: for .

    $default  reduce using rule 26 (stmt)


State 41

   27 stmt_semi: variable . ASS expr

    ASS  shift, and go to state 68


State 42

   28 stmt_semi: procedure .

    $default  reduce using rule 28 (stmt_semi)


State 43

   12 subprogram: subprogram_head declarations block .

    $default  reduce using rule 12 (subprogram)


State 44

    5 identifier_list: IDENT "," identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 45

    2 declarations: type identifier_list ";" declarations .

    $default  reduce using rule 2 (declarations)


State 46

    7 type: standard_type "[" NUMBER "]" .

    $default  reduce using rule 7 (type)


State 47

   17 params: identifier_list . ":" type
   18       | identifier_list . ":" type ";" params

    ":"  shift, and go to state 69


State 48

   15 args: "(" params . ")"

    ")"  shift, and go to state 70


State 49

   14 subprogram_head: FUNCTION IDENT args ";" .

    $default  reduce using rule 14 (subprogram_head)


State 50

   13 subprogram_head: FUNCTION IDENT args ":" . standard_type

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    standard_type  go to state 71


State 51

   40 procedure: IDENT "(" . expr_list ")"

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    $default  reduce using rule 42 (expr_list)

    variable   go to state 58
    procedure  go to state 59
    expr_list  go to state 72
    exprs      go to state 73
    expr       go to state 74
    term       go to state 61


State 52

   39 variable: IDENT "[" . expr "]"

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 75
    term       go to state 61


State 53

   60 term: NUMBER .

    $default  reduce using rule 60 (term)


State 54

   57 expr: ADD . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 76
    term       go to state 61


State 55

   58 expr: SUB . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 77
    term       go to state 61


State 56

   59 expr: NOT . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 78
    term       go to state 61


State 57

   63 term: "(" . expr ")"

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 79
    term       go to state 61


State 58

   61 term: variable .

    $default  reduce using rule 61 (term)


State 59

   62 term: procedure .

    $default  reduce using rule 62 (term)


State 60

   31 if: IF expr . ":" stmt elif else
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    ":"      shift, and go to state 91


State 61

   45 expr: term .

    $default  reduce using rule 45 (expr)


State 62

   36 while: WHILE expr . ":" stmt else
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    ":"      shift, and go to state 92


State 63

   29 stmt_semi: RETURN expr .
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90

    $default  reduce using rule 29 (stmt_semi)


State 64

   37 for: FOR expr . IN expr ":" stmt else
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 93
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90


State 65

   19 block: BEG stmts END .

    $default  reduce using rule 19 (block)


State 66

   20 stmts: stmt stmts .

    $default  reduce using rule 20 (stmts)


State 67

   22 stmt: stmt_semi ";" .

    $default  reduce using rule 22 (stmt)


State 68

   27 stmt_semi: variable ASS . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 94
    term       go to state 61


State 69

   17 params: identifier_list ":" . type
   18       | identifier_list ":" . type ";" params

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    type           go to state 95
    standard_type  go to state 10


State 70

   15 args: "(" params ")" .

    $default  reduce using rule 15 (args)


State 71

   13 subprogram_head: FUNCTION IDENT args ":" standard_type .

    $default  reduce using rule 13 (subprogram_head)


State 72

   40 procedure: IDENT "(" expr_list . ")"

    ")"  shift, and go to state 96


State 73

   41 expr_list: exprs .

    $default  reduce using rule 41 (expr_list)


State 74

   43 exprs: expr .
   44      | expr . "," exprs
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    ","      shift, and go to state 97

    $default  reduce using rule 43 (exprs)


State 75

   39 variable: IDENT "[" expr . "]"
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    "]"      shift, and go to state 98


State 76

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   57     | ADD expr .

    $default  reduce using rule 57 (expr)


State 77

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   58     | SUB expr .

    $default  reduce using rule 58 (expr)


State 78

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   59     | NOT expr .

    $default  reduce using rule 59 (expr)


State 79

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   63 term: "(" expr . ")"

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    ")"      shift, and go to state 99


State 80

   50 expr: expr EQUAL . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 100
    term       go to state 61


State 81

   51 expr: expr NOTEQU . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 101
    term       go to state 61


State 82

   46 expr: expr GREATER . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 102
    term       go to state 61


State 83

   47 expr: expr EQUGRE . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 103
    term       go to state 61


State 84

   48 expr: expr LESS . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 104
    term       go to state 61


State 85

   49 expr: expr EQULESS . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 105
    term       go to state 61


State 86

   56 expr: expr IN . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 106
    term       go to state 61


State 87

   52 expr: expr ADD . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 107
    term       go to state 61


State 88

   53 expr: expr SUB . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 108
    term       go to state 61


State 89

   54 expr: expr MUL . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 109
    term       go to state 61


State 90

   55 expr: expr DIV . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 110
    term       go to state 61


State 91

   31 if: IF expr ":" . stmt elif else

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    block      go to state 34
    stmt       go to state 111
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 92

   36 while: WHILE expr ":" . stmt else

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    block      go to state 34
    stmt       go to state 112
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 93

   37 for: FOR expr IN . expr ":" stmt else
   56 expr: expr IN . expr

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 113
    term       go to state 61


State 94

   27 stmt_semi: variable ASS expr .
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90

    $default  reduce using rule 27 (stmt_semi)


State 95

   17 params: identifier_list ":" type .
   18       | identifier_list ":" type . ";" params

    ";"  shift, and go to state 114

    $default  reduce using rule 17 (params)


State 96

   40 procedure: IDENT "(" expr_list ")" .

    $default  reduce using rule 40 (procedure)


State 97

   44 exprs: expr "," . exprs

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    exprs      go to state 115
    expr       go to state 74
    term       go to state 61


State 98

   39 variable: IDENT "[" expr "]" .

    $default  reduce using rule 39 (variable)


State 99

   63 term: "(" expr ")" .

    $default  reduce using rule 63 (term)


State 100

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   50     | expr EQUAL expr .
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 50 (expr)


State 101

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   51     | expr NOTEQU expr .
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 51 (expr)


State 102

   46 expr: expr . GREATER expr
   46     | expr GREATER expr .
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 46 (expr)


State 103

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   47     | expr EQUGRE expr .
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 47 (expr)


State 104

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   48     | expr LESS expr .
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 48 (expr)


State 105

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   49     | expr EQULESS expr .
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 49 (expr)


State 106

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   56     | expr IN expr .

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 56 (expr)


State 107

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   52     | expr ADD expr .
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 52 (expr)


State 108

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   53     | expr SUB expr .
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 53 (expr)


State 109

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   54     | expr MUL expr .
   55     | expr . DIV expr
   56     | expr . IN expr

    $default  reduce using rule 54 (expr)


State 110

   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   55     | expr DIV expr .
   56     | expr . IN expr

    $default  reduce using rule 55 (expr)


State 111

   31 if: IF expr ":" stmt . elif else

    ELIF  shift, and go to state 116

    ELIF      [reduce using rule 33 (elif)]
    $default  reduce using rule 33 (elif)

    elif  go to state 117


State 112

   36 while: WHILE expr ":" stmt . else

    ELSE  shift, and go to state 118

    ELSE      [reduce using rule 35 (else)]
    $default  reduce using rule 35 (else)

    else  go to state 119


State 113

   37 for: FOR expr IN expr . ":" stmt else
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr
   56     | expr IN expr .

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    MUL  shift, and go to state 89
    DIV  shift, and go to state 90
    ":"  shift, and go to state 120

    $default  reduce using rule 56 (expr)


State 114

   18 params: identifier_list ":" type ";" . params

    IDENT  shift, and go to state 15

    identifier_list  go to state 47
    params           go to state 121


State 115

   44 exprs: expr "," exprs .

    $default  reduce using rule 44 (exprs)


State 116

   32 elif: ELIF . expr ":" stmt elif

    NUMBER  shift, and go to state 53
    IDENT   shift, and go to state 28
    ADD     shift, and go to state 54
    SUB     shift, and go to state 55
    NOT     shift, and go to state 56
    "("     shift, and go to state 57

    variable   go to state 58
    procedure  go to state 59
    expr       go to state 122
    term       go to state 61


State 117

   31 if: IF expr ":" stmt elif . else

    ELSE  shift, and go to state 118

    ELSE      [reduce using rule 35 (else)]
    $default  reduce using rule 35 (else)

    else  go to state 123


State 118

   34 else: ELSE . ":" stmt

    ":"  shift, and go to state 124


State 119

   36 while: WHILE expr ":" stmt else .

    $default  reduce using rule 36 (while)


State 120

   37 for: FOR expr IN expr ":" . stmt else

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    block      go to state 34
    stmt       go to state 125
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 121

   18 params: identifier_list ":" type ";" params .

    $default  reduce using rule 18 (params)


State 122

   32 elif: ELIF expr . ":" stmt elif
   46 expr: expr . GREATER expr
   47     | expr . EQUGRE expr
   48     | expr . LESS expr
   49     | expr . EQULESS expr
   50     | expr . EQUAL expr
   51     | expr . NOTEQU expr
   52     | expr . ADD expr
   53     | expr . SUB expr
   54     | expr . MUL expr
   55     | expr . DIV expr
   56     | expr . IN expr

    EQUAL    shift, and go to state 80
    NOTEQU   shift, and go to state 81
    GREATER  shift, and go to state 82
    EQUGRE   shift, and go to state 83
    LESS     shift, and go to state 84
    EQULESS  shift, and go to state 85
    IN       shift, and go to state 86
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    MUL      shift, and go to state 89
    DIV      shift, and go to state 90
    ":"      shift, and go to state 126


State 123

   31 if: IF expr ":" stmt elif else .

    $default  reduce using rule 31 (if)


State 124

   34 else: ELSE ":" . stmt

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    block      go to state 34
    stmt       go to state 127
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 125

   37 for: FOR expr IN expr ":" stmt . else

    ELSE  shift, and go to state 118

    ELSE      [reduce using rule 35 (else)]
    $default  reduce using rule 35 (else)

    else  go to state 128


State 126

   32 elif: ELIF expr ":" . stmt elif

    IDENT   shift, and go to state 28
    BEG     shift, and go to state 19
    IF      shift, and go to state 29
    NOP     shift, and go to state 30
    WHILE   shift, and go to state 31
    RETURN  shift, and go to state 32
    FOR     shift, and go to state 33

    block      go to state 34
    stmt       go to state 129
    stmt_semi  go to state 37
    if         go to state 38
    while      go to state 39
    for        go to state 40
    variable   go to state 41
    procedure  go to state 42


State 127

   34 else: ELSE ":" stmt .

    $default  reduce using rule 34 (else)


State 128

   37 for: FOR expr IN expr ":" stmt else .

    $default  reduce using rule 37 (for)


State 129

   32 elif: ELIF expr ":" stmt . elif

    ELIF  shift, and go to state 116

    ELIF      [reduce using rule 33 (elif)]
    $default  reduce using rule 33 (elif)

    elif  go to state 130


State 130

   32 elif: ELIF expr ":" stmt elif .

    $default  reduce using rule 32 (elif)
