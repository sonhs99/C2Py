Terminals unused in grammar

   ARROW


State 11 충돌: 2 쉬프트/리듀스
State 31 충돌: 2 쉬프트/리듀스
State 35 충돌: 2 쉬프트/리듀스
State 36 충돌: 2 쉬프트/리듀스
State 39 충돌: 1 쉬프트/리듀스
State 46 충돌: 1 쉬프트/리듀스
State 82 충돌: 1 쉬프트/리듀스
State 133 충돌: 1 쉬프트/리듀스
State 163 충돌: 1 쉬프트/리듀스
State 177 충돌: 1 쉬프트/리듀스
State 178 충돌: 1 쉬프트/리듀스
State 179 충돌: 1 쉬프트/리듀스
State 180 충돌: 1 쉬프트/리듀스
State 185 충돌: 1 쉬프트/리듀스
State 186 충돌: 1 쉬프트/리듀스
State 197 충돌: 1 쉬프트/리듀스
State 198 충돌: 1 쉬프트/리듀스
State 205 충돌: 1 쉬프트/리듀스
State 206 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: MAINPROG IDENT ";" declarations subprograms
    2        | MAINPROG error ";" declarations subprograms
    3        | MAINPROG IDENT error declarations subprograms
    4        | MAINPROG error declarations subprograms

    5 declarations: type identifier_list ";" declarations
    6             | type identifier_list error declarations
    7             | %empty

    8 identifier_list: IDENT init
    9                | IDENT init "," identifier_list
   10                | error

   11 init: ASS expr
   12     | %empty
   13     | ASS error

   14 type: standard_type
   15     | standard_type "[" NUMBER "]"
   16     | standard_type "[" NUMBER error
   17     | standard_type "[" error
   18     | standard_type "[" error "]"
   19     | standard_type NUMBER "]"
   20     | standard_type NUMBER error
   21     | standard_type "]"

   22 standard_type: INT
   23              | FLOAT

   24 subprograms: subprogram subprograms
   25            | %empty

   26 subprogram: subprogram_head block

   27 subprogram_head: FUNCTION IDENT args ":" type
   28                | FUNCTION error args ":" type
   29                | FUNCTION IDENT args error type
   30                | FUNCTION error args error type
   31                | FUNCTION IDENT args
   32                | FUNCTION error args

   33 args: "(" params ")"
   34     | "(" params error
   35     | %empty

   36 params: param
   37       | param "," params

   38 param: IDENT ":" type
   39      | IDENT error type
   40      | IDENT ":" IDENT
   41      | IDENT ":" type error

   42 block: BEG declarations stmts END
   43      | BEG declarations stmts error

   44 stmts: stmt stmts
   45      | %empty

   46 stmt: stmt_semi ";"
   47     | stmt_semi error
   48     | error ";"
   49     | block
   50     | if
   51     | while
   52     | for

   53 stmt_semi: expr
   54          | BREAK
   55          | CONTINUE
   56          | RETURN expr
   57          | RETURN error
   58          | NOP

   59 if: IF expr ":" stmt elif else
   60   | IF expr error stmt elif else

   61 elif: ELIF expr ":" stmt elif
   62     | %empty
   63     | ELIF expr error stmt elif

   64 else: ELSE ":" stmt
   65     | %empty
   66     | ELSE error stmt

   67 while: WHILE expr ":" stmt else
   68      | WHILE expr error stmt else

   69 for: FOR expr IN expr ":" stmt else
   70    | FOR expr IN expr error stmt else

   71 variable: IDENT
   72         | IDENT "[" expr "]"
   73         | IDENT "[" expr error

   74 procedure: IDENT "(" expr_list ")"
   75          | IDENT "(" expr_list error

   76 expr_list: exprs
   77          | %empty

   78 exprs: expr
   79      | expr "," exprs
   80      | expr error exprs

   81 expr: term
   82     | expr ASS expr
   83     | expr GREATER expr
   84     | expr EQUGRE expr
   85     | expr LESS expr
   86     | expr EQULESS expr
   87     | expr EQUAL expr
   88     | expr NOTEQU expr
   89     | expr ADD expr
   90     | expr SUB expr
   91     | expr MUL expr
   92     | expr DIV expr
   93     | expr IN expr
   94     | ADD expr
   95     | SUB expr
   96     | NOT expr
   97     | expr ASS error
   98     | expr GREATER error
   99     | expr EQUGRE error
  100     | expr LESS error
  101     | expr EQULESS error
  102     | expr EQUAL error
  103     | expr NOTEQU error
  104     | expr ADD error
  105     | expr SUB error
  106     | expr MUL error
  107     | expr DIV error
  108     | expr IN error
  109     | ADD error
  110     | SUB error
  111     | NOT error

  112 term: NUMBER
  113     | variable
  114     | procedure
  115     | "(" expr ")"
  116     | "(" expr error
  117     | type term
  118     | type


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 4 6 10 13 16 17 18 20 28 29 30 32 34 39 41 43 47 48
    57 60 63 66 68 70 73 75 80 97 98 99 100 101 102 103 104 105 106
    107 108 109 110 111 116
NUMBER (258) 15 16 19 20 112
IDENT (259) 1 3 8 9 27 29 31 38 39 40 41 71 72 73 74 75
ASS (260) 11 13 82 97
EQUAL (261) 87 102
NOTEQU (262) 88 103
GREATER (263) 83 98
EQUGRE (264) 84 99
LESS (265) 85 100
EQULESS (266) 86 101
IN (267) 69 70 93 108
ADD (268) 89 94 104 109
SUB (269) 90 95 105 110
MUL (270) 91 106
DIV (271) 92 107
UMINUS (272)
UPLUS (273)
NOT (274) 96 111
"(" (275) 33 34 74 75 115 116
")" (276) 33 74 115
"[" (277) 15 16 17 18 72 73
"]" (278) 15 18 19 21 72
"," (279) 9 37 79
";" (280) 1 2 5 46 48
":" (281) 27 28 38 40 41 59 61 64 67 69
MAINPROG (282) 1 2 3 4
FUNCTION (283) 27 28 29 30 31 32
BEG (284) 42 43
END (285) 42
IF (286) 59 60
CONTINUE (287) 55
ELIF (288) 61 63
ELSE (289) 64 66
NOP (290) 58
WHILE (291) 67 68
RETURN (292) 56 57
BREAK (293) 54
FOR (294) 69 70
INT (295) 22
FLOAT (296) 23
ARROW (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1 2 3 4, on right: 0
declarations (45)
    on left: 5 6 7, on right: 1 2 3 4 5 6 42 43
identifier_list (46)
    on left: 8 9 10, on right: 5 6 9
init (47)
    on left: 11 12 13, on right: 8 9
type (48)
    on left: 14 15 16 17 18 19 20 21, on right: 5 6 27 28 29 30 38
    39 41 117 118
standard_type (49)
    on left: 22 23, on right: 14 15 16 17 18 19 20 21
subprograms (50)
    on left: 24 25, on right: 1 2 3 4 24
subprogram (51)
    on left: 26, on right: 24
subprogram_head (52)
    on left: 27 28 29 30 31 32, on right: 26
args (53)
    on left: 33 34 35, on right: 27 28 29 30 31 32
params (54)
    on left: 36 37, on right: 33 34 37
param (55)
    on left: 38 39 40 41, on right: 36 37
block (56)
    on left: 42 43, on right: 26 49
stmts (57)
    on left: 44 45, on right: 42 43 44
stmt (58)
    on left: 46 47 48 49 50 51 52, on right: 44 59 60 61 63 64 66 67
    68 69 70
stmt_semi (59)
    on left: 53 54 55 56 57 58, on right: 46 47
if (60)
    on left: 59 60, on right: 50
elif (61)
    on left: 61 62 63, on right: 59 60 61 63
else (62)
    on left: 64 65 66, on right: 59 60 67 68 69 70
while (63)
    on left: 67 68, on right: 51
for (64)
    on left: 69 70, on right: 52
variable (65)
    on left: 71 72 73, on right: 113
procedure (66)
    on left: 74 75, on right: 114
expr_list (67)
    on left: 76 77, on right: 74 75
exprs (68)
    on left: 78 79 80, on right: 76 79 80
expr (69)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101 102 103 104 105 106 107 108 109 110 111, on right: 11
    53 56 59 60 61 63 67 68 69 70 72 73 78 79 80 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
    107 108 115 116
term (70)
    on left: 112 113 114 115 116 117 118, on right: 81 117


State 0

    0 $accept: . program $end
    1 program: . MAINPROG IDENT ";" declarations subprograms
    2        | . MAINPROG error ";" declarations subprograms
    3        | . MAINPROG IDENT error declarations subprograms
    4        | . MAINPROG error declarations subprograms

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . IDENT ";" declarations subprograms
    2        | MAINPROG . error ";" declarations subprograms
    3        | MAINPROG . IDENT error declarations subprograms
    4        | MAINPROG . error declarations subprograms

    error  shift, and go to state 3
    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: MAINPROG error . ";" declarations subprograms
    4        | MAINPROG error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    ";"    shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 4

    1 program: MAINPROG IDENT . ";" declarations subprograms
    3        | MAINPROG IDENT . error declarations subprograms

    error  shift, and go to state 12
    ";"    shift, and go to state 13


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: MAINPROG error ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 14
    type           go to state 10
    standard_type  go to state 11


State 7

   22 standard_type: INT .

    $default  reduce using rule 22 (standard_type)


State 8

   23 standard_type: FLOAT .

    $default  reduce using rule 23 (standard_type)


State 9

    4 program: MAINPROG error declarations . subprograms
   24 subprograms: . subprogram subprograms
   25            | . %empty  [$end]
   26 subprogram: . subprogram_head block
   27 subprogram_head: . FUNCTION IDENT args ":" type
   28                | . FUNCTION error args ":" type
   29                | . FUNCTION IDENT args error type
   30                | . FUNCTION error args error type
   31                | . FUNCTION IDENT args
   32                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 25 (subprograms)

    subprograms      go to state 16
    subprogram       go to state 17
    subprogram_head  go to state 18


State 10

    5 declarations: type . identifier_list ";" declarations
    6             | type . identifier_list error declarations
    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 21


State 11

   14 type: standard_type .  [error, NUMBER, IDENT, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, "(", ")", "]", ",", ";", ":", BEG, INT, FLOAT]
   15     | standard_type . "[" NUMBER "]"
   16     | standard_type . "[" NUMBER error
   17     | standard_type . "[" error
   18     | standard_type . "[" error "]"
   19     | standard_type . NUMBER "]"
   20     | standard_type . NUMBER error
   21     | standard_type . "]"

    NUMBER  shift, and go to state 22
    "["     shift, and go to state 23
    "]"     shift, and go to state 24

    NUMBER    [reduce using rule 14 (type)]
    "]"       [reduce using rule 14 (type)]
    $default  reduce using rule 14 (type)


State 12

    3 program: MAINPROG IDENT error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 25
    type           go to state 10
    standard_type  go to state 11


State 13

    1 program: MAINPROG IDENT ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 26
    type           go to state 10
    standard_type  go to state 11


State 14

    2 program: MAINPROG error ";" declarations . subprograms
   24 subprograms: . subprogram subprograms
   25            | . %empty  [$end]
   26 subprogram: . subprogram_head block
   27 subprogram_head: . FUNCTION IDENT args ":" type
   28                | . FUNCTION error args ":" type
   29                | . FUNCTION IDENT args error type
   30                | . FUNCTION error args error type
   31                | . FUNCTION IDENT args
   32                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 25 (subprograms)

    subprograms      go to state 27
    subprogram       go to state 17
    subprogram_head  go to state 18


State 15

   27 subprogram_head: FUNCTION . IDENT args ":" type
   28                | FUNCTION . error args ":" type
   29                | FUNCTION . IDENT args error type
   30                | FUNCTION . error args error type
   31                | FUNCTION . IDENT args
   32                | FUNCTION . error args

    error  shift, and go to state 28
    IDENT  shift, and go to state 29


State 16

    4 program: MAINPROG error declarations subprograms .

    $default  reduce using rule 4 (program)


State 17

   24 subprograms: . subprogram subprograms
   24            | subprogram . subprograms
   25            | . %empty  [$end]
   26 subprogram: . subprogram_head block
   27 subprogram_head: . FUNCTION IDENT args ":" type
   28                | . FUNCTION error args ":" type
   29                | . FUNCTION IDENT args error type
   30                | . FUNCTION error args error type
   31                | . FUNCTION IDENT args
   32                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 25 (subprograms)

    subprograms      go to state 30
    subprogram       go to state 17
    subprogram_head  go to state 18


State 18

   26 subprogram: subprogram_head . block
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error

    BEG  shift, and go to state 31

    block  go to state 32


State 19

   10 identifier_list: error .

    $default  reduce using rule 10 (identifier_list)


State 20

    8 identifier_list: IDENT . init
    9                | IDENT . init "," identifier_list
   11 init: . ASS expr
   12     | . %empty  [error, ",", ";"]
   13     | . ASS error

    ASS  shift, and go to state 33

    $default  reduce using rule 12 (init)

    init  go to state 34


State 21

    5 declarations: type identifier_list . ";" declarations
    6             | type identifier_list . error declarations

    error  shift, and go to state 35
    ";"    shift, and go to state 36


State 22

   19 type: standard_type NUMBER . "]"
   20     | standard_type NUMBER . error

    error  shift, and go to state 37
    "]"    shift, and go to state 38


State 23

   15 type: standard_type "[" . NUMBER "]"
   16     | standard_type "[" . NUMBER error
   17     | standard_type "[" . error
   18     | standard_type "[" . error "]"

    error   shift, and go to state 39
    NUMBER  shift, and go to state 40


State 24

   21 type: standard_type "]" .

    $default  reduce using rule 21 (type)


State 25

    3 program: MAINPROG IDENT error declarations . subprograms
   24 subprograms: . subprogram subprograms
   25            | . %empty  [$end]
   26 subprogram: . subprogram_head block
   27 subprogram_head: . FUNCTION IDENT args ":" type
   28                | . FUNCTION error args ":" type
   29                | . FUNCTION IDENT args error type
   30                | . FUNCTION error args error type
   31                | . FUNCTION IDENT args
   32                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 25 (subprograms)

    subprograms      go to state 41
    subprogram       go to state 17
    subprogram_head  go to state 18


State 26

    1 program: MAINPROG IDENT ";" declarations . subprograms
   24 subprograms: . subprogram subprograms
   25            | . %empty  [$end]
   26 subprogram: . subprogram_head block
   27 subprogram_head: . FUNCTION IDENT args ":" type
   28                | . FUNCTION error args ":" type
   29                | . FUNCTION IDENT args error type
   30                | . FUNCTION error args error type
   31                | . FUNCTION IDENT args
   32                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 25 (subprograms)

    subprograms      go to state 42
    subprogram       go to state 17
    subprogram_head  go to state 18


State 27

    2 program: MAINPROG error ";" declarations subprograms .

    $default  reduce using rule 2 (program)


State 28

   28 subprogram_head: FUNCTION error . args ":" type
   30                | FUNCTION error . args error type
   32                | FUNCTION error . args
   33 args: . "(" params ")"
   34     | . "(" params error
   35     | . %empty  [error, ":", BEG]

    "("  shift, and go to state 43

    $default  reduce using rule 35 (args)

    args  go to state 44


State 29

   27 subprogram_head: FUNCTION IDENT . args ":" type
   29                | FUNCTION IDENT . args error type
   31                | FUNCTION IDENT . args
   33 args: . "(" params ")"
   34     | . "(" params error
   35     | . %empty  [error, ":", BEG]

    "("  shift, and go to state 43

    $default  reduce using rule 35 (args)

    args  go to state 45


State 30

   24 subprograms: subprogram subprograms .

    $default  reduce using rule 24 (subprograms)


State 31

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: BEG . declarations stmts END
   43      | BEG . declarations stmts error

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 46
    type           go to state 10
    standard_type  go to state 11


State 32

   26 subprogram: subprogram_head block .

    $default  reduce using rule 26 (subprogram)


State 33

   11 init: ASS . expr
   13     | ASS . error
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 57
    term           go to state 58


State 34

    8 identifier_list: IDENT init .  [error, ";"]
    9                | IDENT init . "," identifier_list

    ","  shift, and go to state 59

    $default  reduce using rule 8 (identifier_list)


State 35

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    6             | type identifier_list error . declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 60
    type           go to state 10
    standard_type  go to state 11


State 36

    5 declarations: . type identifier_list ";" declarations
    5             | type identifier_list ";" . declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 61
    type           go to state 10
    standard_type  go to state 11


State 37

   20 type: standard_type NUMBER error .

    $default  reduce using rule 20 (type)


State 38

   19 type: standard_type NUMBER "]" .

    $default  reduce using rule 19 (type)


State 39

   17 type: standard_type "[" error .  [error, NUMBER, IDENT, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, "(", ")", "]", ",", ";", ":", BEG, INT, FLOAT]
   18     | standard_type "[" error . "]"

    "]"  shift, and go to state 62

    "]"       [reduce using rule 17 (type)]
    $default  reduce using rule 17 (type)


State 40

   15 type: standard_type "[" NUMBER . "]"
   16     | standard_type "[" NUMBER . error

    error  shift, and go to state 63
    "]"    shift, and go to state 64


State 41

    3 program: MAINPROG IDENT error declarations subprograms .

    $default  reduce using rule 3 (program)


State 42

    1 program: MAINPROG IDENT ";" declarations subprograms .

    $default  reduce using rule 1 (program)


State 43

   33 args: "(" . params ")"
   34     | "(" . params error
   36 params: . param
   37       | . param "," params
   38 param: . IDENT ":" type
   39      | . IDENT error type
   40      | . IDENT ":" IDENT
   41      | . IDENT ":" type error

    IDENT  shift, and go to state 65

    params  go to state 66
    param   go to state 67


State 44

   28 subprogram_head: FUNCTION error args . ":" type
   30                | FUNCTION error args . error type
   32                | FUNCTION error args .  [BEG]

    error  shift, and go to state 68
    ":"    shift, and go to state 69

    BEG  reduce using rule 32 (subprogram_head)


State 45

   27 subprogram_head: FUNCTION IDENT args . ":" type
   29                | FUNCTION IDENT args . error type
   31                | FUNCTION IDENT args .  [BEG]

    error  shift, and go to state 70
    ":"    shift, and go to state 71

    BEG  reduce using rule 31 (subprogram_head)


State 46

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   42      | BEG declarations . stmts END
   43      | . BEG declarations stmts error
   43      | BEG declarations . stmts error
   44 stmts: . stmt stmts
   45      | . %empty  [error, END]
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    error  [reduce using rule 45 (stmts)]
    END    reduce using rule 45 (stmts)

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmts          go to state 81
    stmt           go to state 82
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 47

   13 init: ASS error .

    $default  reduce using rule 13 (init)


State 48

  112 term: NUMBER .

    $default  reduce using rule 112 (term)


State 49

   71 variable: IDENT .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   72         | IDENT . "[" expr "]"
   73         | IDENT . "[" expr error
   74 procedure: IDENT . "(" expr_list ")"
   75          | IDENT . "(" expr_list error

    "("  shift, and go to state 88
    "["  shift, and go to state 89

    $default  reduce using rule 71 (variable)


State 50

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   94     | ADD . expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  109     | ADD . error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 90
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 91
    term           go to state 58


State 51

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   95     | SUB . expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  110     | SUB . error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 92
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 93
    term           go to state 58


State 52

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   96     | NOT . expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  111     | NOT . error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 94
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 95
    term           go to state 58


State 53

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  115     | "(" . expr ")"
  116     | . "(" expr error
  116     | "(" . expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 96
    term           go to state 58


State 54

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  117     | type . term
  118     | . type
  118     | type .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 118 (term)

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    term           go to state 97


State 55

  113 term: variable .

    $default  reduce using rule 113 (term)


State 56

  114 term: procedure .

    $default  reduce using rule 114 (term)


State 57

   11 init: ASS expr .  [error, ",", ";"]
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109

    $default  reduce using rule 11 (init)


State 58

   81 expr: term .

    $default  reduce using rule 81 (expr)


State 59

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
    9                | IDENT init "," . identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 110


State 60

    6 declarations: type identifier_list error declarations .

    $default  reduce using rule 6 (declarations)


State 61

    5 declarations: type identifier_list ";" declarations .

    $default  reduce using rule 5 (declarations)


State 62

   18 type: standard_type "[" error "]" .

    $default  reduce using rule 18 (type)


State 63

   16 type: standard_type "[" NUMBER error .

    $default  reduce using rule 16 (type)


State 64

   15 type: standard_type "[" NUMBER "]" .

    $default  reduce using rule 15 (type)


State 65

   38 param: IDENT . ":" type
   39      | IDENT . error type
   40      | IDENT . ":" IDENT
   41      | IDENT . ":" type error

    error  shift, and go to state 111
    ":"    shift, and go to state 112


State 66

   33 args: "(" params . ")"
   34     | "(" params . error

    error  shift, and go to state 113
    ")"    shift, and go to state 114


State 67

   36 params: param .  [error, ")"]
   37       | param . "," params

    ","  shift, and go to state 115

    $default  reduce using rule 36 (params)


State 68

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   30 subprogram_head: FUNCTION error args error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 116
    standard_type  go to state 11


State 69

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   28 subprogram_head: FUNCTION error args ":" . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 117
    standard_type  go to state 11


State 70

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   29 subprogram_head: FUNCTION IDENT args error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 118
    standard_type  go to state 11


State 71

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   27 subprogram_head: FUNCTION IDENT args ":" . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 119
    standard_type  go to state 11


State 72

   48 stmt: error . ";"

    ";"  shift, and go to state 120


State 73

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   59 if: IF . expr ":" stmt elif else
   60   | IF . expr error stmt elif else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 121
    term           go to state 58


State 74

   55 stmt_semi: CONTINUE .

    $default  reduce using rule 55 (stmt_semi)


State 75

   58 stmt_semi: NOP .

    $default  reduce using rule 58 (stmt_semi)


State 76

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   67 while: WHILE . expr ":" stmt else
   68      | WHILE . expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 122
    term           go to state 58


State 77

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   56 stmt_semi: RETURN . expr
   57          | RETURN . error
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 123
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 124
    term           go to state 58


State 78

   54 stmt_semi: BREAK .

    $default  reduce using rule 54 (stmt_semi)


State 79

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   69 for: FOR . expr IN expr ":" stmt else
   70    | FOR . expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 125
    term           go to state 58


State 80

   49 stmt: block .

    $default  reduce using rule 49 (stmt)


State 81

   42 block: BEG declarations stmts . END
   43      | BEG declarations stmts . error

    error  shift, and go to state 126
    END    shift, and go to state 127


State 82

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   44 stmts: . stmt stmts
   44      | stmt . stmts
   45      | . %empty  [error, END]
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    error  [reduce using rule 45 (stmts)]
    END    reduce using rule 45 (stmts)

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmts          go to state 128
    stmt           go to state 82
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 83

   46 stmt: stmt_semi . ";"
   47     | stmt_semi . error

    error  shift, and go to state 129
    ";"    shift, and go to state 130


State 84

   50 stmt: if .

    $default  reduce using rule 50 (stmt)


State 85

   51 stmt: while .

    $default  reduce using rule 51 (stmt)


State 86

   52 stmt: for .

    $default  reduce using rule 52 (stmt)


State 87

   53 stmt_semi: expr .  [error, ";"]
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109

    $default  reduce using rule 53 (stmt_semi)


State 88

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   74          | IDENT "(" . expr_list ")"
   75          | . IDENT "(" expr_list error
   75          | IDENT "(" . expr_list error
   76 expr_list: . exprs
   77          | . %empty  [error, ")"]
   78 exprs: . expr
   79      | . expr "," exprs
   80      | . expr error exprs
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 77 (expr_list)

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr_list      go to state 131
    exprs          go to state 132
    expr           go to state 133
    term           go to state 58


State 89

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   72         | IDENT "[" . expr "]"
   73         | . IDENT "[" expr error
   73         | IDENT "[" . expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 134
    term           go to state 58


State 90

  109 expr: ADD error .

    $default  reduce using rule 109 (expr)


State 91

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   94     | ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    $default  reduce using rule 94 (expr)

    룰 94과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UPLUS).
    룰 94과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UPLUS).
    룰 94과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UPLUS).
    룰 94과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UPLUS).
    룰 94과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UPLUS).
    룰 94과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UPLUS).
    룰 94과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UPLUS).
    룰 94과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UPLUS).
    룰 94과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UPLUS).
    룰 94과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UPLUS).
    룰 94과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UPLUS).
    룰 94과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UPLUS).


State 92

  110 expr: SUB error .

    $default  reduce using rule 110 (expr)


State 93

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   95     | SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    $default  reduce using rule 95 (expr)

    룰 95과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UMINUS).
    룰 95과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UMINUS).
    룰 95과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UMINUS).
    룰 95과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UMINUS).
    룰 95과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UMINUS).
    룰 95과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UMINUS).
    룰 95과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UMINUS).
    룰 95과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UMINUS).
    룰 95과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UMINUS).
    룰 95과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UMINUS).
    룰 95과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UMINUS).
    룰 95과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UMINUS).


State 94

  111 expr: NOT error .

    $default  reduce using rule 111 (expr)


State 95

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   96     | NOT expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    $default  reduce using rule 96 (expr)

    룰 96과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOT).
    룰 96과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < NOT).
    룰 96과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < NOT).
    룰 96과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < NOT).
    룰 96과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < NOT).
    룰 96과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < NOT).
    룰 96과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < NOT).
    룰 96과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < NOT).
    룰 96과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < NOT).
    룰 96과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < NOT).
    룰 96과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < NOT).
    룰 96과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < NOT).


State 96

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error
  115 term: "(" expr . ")"
  116     | "(" expr . error

    error    shift, and go to state 135
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    ")"      shift, and go to state 136


State 97

  117 term: type term .

    $default  reduce using rule 117 (term)


State 98

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   82     | expr ASS . expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   97     | expr ASS . error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 137
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 138
    term           go to state 58


State 99

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   87     | expr EQUAL . expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  102     | expr EQUAL . error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 139
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 140
    term           go to state 58


State 100

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   88     | expr NOTEQU . expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  103     | expr NOTEQU . error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 141
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 142
    term           go to state 58


State 101

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   83     | expr GREATER . expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   98     | expr GREATER . error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 143
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 144
    term           go to state 58


State 102

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   84     | expr EQUGRE . expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
   99     | expr EQUGRE . error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 145
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 146
    term           go to state 58


State 103

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   85     | expr LESS . expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  100     | expr LESS . error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 147
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 148
    term           go to state 58


State 104

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   86     | expr EQULESS . expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  101     | expr EQULESS . error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 149
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 150
    term           go to state 58


State 105

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   93     | expr IN . expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  108     | expr IN . error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 151
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 152
    term           go to state 58


State 106

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   89     | expr ADD . expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  104     | expr ADD . error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 153
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 154
    term           go to state 58


State 107

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   90     | expr SUB . expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  105     | expr SUB . error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 155
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 156
    term           go to state 58


State 108

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   91     | expr MUL . expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  106     | expr MUL . error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 157
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 158
    term           go to state 58


State 109

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   92     | expr DIV . expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  107     | expr DIV . error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 159
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 160
    term           go to state 58


State 110

    9 identifier_list: IDENT init "," identifier_list .

    $default  reduce using rule 9 (identifier_list)


State 111

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   39 param: IDENT error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 161
    standard_type  go to state 11


State 112

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   38 param: IDENT ":" . type
   40      | IDENT ":" . IDENT
   41      | IDENT ":" . type error

    IDENT  shift, and go to state 162
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 163
    standard_type  go to state 11


State 113

   34 args: "(" params error .

    $default  reduce using rule 34 (args)


State 114

   33 args: "(" params ")" .

    $default  reduce using rule 33 (args)


State 115

   36 params: . param
   37       | . param "," params
   37       | param "," . params
   38 param: . IDENT ":" type
   39      | . IDENT error type
   40      | . IDENT ":" IDENT
   41      | . IDENT ":" type error

    IDENT  shift, and go to state 65

    params  go to state 164
    param   go to state 67


State 116

   30 subprogram_head: FUNCTION error args error type .

    $default  reduce using rule 30 (subprogram_head)


State 117

   28 subprogram_head: FUNCTION error args ":" type .

    $default  reduce using rule 28 (subprogram_head)


State 118

   29 subprogram_head: FUNCTION IDENT args error type .

    $default  reduce using rule 29 (subprogram_head)


State 119

   27 subprogram_head: FUNCTION IDENT args ":" type .

    $default  reduce using rule 27 (subprogram_head)


State 120

   48 stmt: error ";" .

    $default  reduce using rule 48 (stmt)


State 121

   59 if: IF expr . ":" stmt elif else
   60   | IF expr . error stmt elif else
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error    shift, and go to state 165
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    ":"      shift, and go to state 166


State 122

   67 while: WHILE expr . ":" stmt else
   68      | WHILE expr . error stmt else
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error    shift, and go to state 167
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    ":"      shift, and go to state 168


State 123

   57 stmt_semi: RETURN error .

    $default  reduce using rule 57 (stmt_semi)


State 124

   56 stmt_semi: RETURN expr .  [error, ";"]
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109

    $default  reduce using rule 56 (stmt_semi)


State 125

   69 for: FOR expr . IN expr ":" stmt else
   70    | FOR expr . IN expr error stmt else
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 169
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109


State 126

   43 block: BEG declarations stmts error .

    $default  reduce using rule 43 (block)


State 127

   42 block: BEG declarations stmts END .

    $default  reduce using rule 42 (block)


State 128

   44 stmts: stmt stmts .

    $default  reduce using rule 44 (stmts)


State 129

   47 stmt: stmt_semi error .

    $default  reduce using rule 47 (stmt)


State 130

   46 stmt: stmt_semi ";" .

    $default  reduce using rule 46 (stmt)


State 131

   74 procedure: IDENT "(" expr_list . ")"
   75          | IDENT "(" expr_list . error

    error  shift, and go to state 170
    ")"    shift, and go to state 171


State 132

   76 expr_list: exprs .

    $default  reduce using rule 76 (expr_list)


State 133

   78 exprs: expr .  [error, ")"]
   79      | expr . "," exprs
   80      | expr . error exprs
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error    shift, and go to state 172
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    ","      shift, and go to state 173

    error  [reduce using rule 78 (exprs)]
    ")"    reduce using rule 78 (exprs)


State 134

   72 variable: IDENT "[" expr . "]"
   73         | IDENT "[" expr . error
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error    shift, and go to state 174
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    "]"      shift, and go to state 175


State 135

  116 term: "(" expr error .

    $default  reduce using rule 116 (term)


State 136

  115 term: "(" expr ")" .

    $default  reduce using rule 115 (term)


State 137

   97 expr: expr ASS error .

    $default  reduce using rule 97 (expr)


State 138

   82 expr: expr . ASS expr
   82     | expr ASS expr .  [error, ASS, ")", "]", ",", ";", ":"]
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109

    $default  reduce using rule 82 (expr)

    룰 82과 토큰 ASS의 충돌이 리듀스로 결정됨 (%left ASS).
    룰 82과 토큰 EQUAL의 충돌이 쉬프트로 결정됨 (ASS < EQUAL).
    룰 82과 토큰 NOTEQU의 충돌이 쉬프트로 결정됨 (ASS < NOTEQU).
    룰 82과 토큰 GREATER의 충돌이 쉬프트로 결정됨 (ASS < GREATER).
    룰 82과 토큰 EQUGRE의 충돌이 쉬프트로 결정됨 (ASS < EQUGRE).
    룰 82과 토큰 LESS의 충돌이 쉬프트로 결정됨 (ASS < LESS).
    룰 82과 토큰 EQULESS의 충돌이 쉬프트로 결정됨 (ASS < EQULESS).
    룰 82과 토큰 IN의 충돌이 쉬프트로 결정됨 (ASS < IN).
    룰 82과 토큰 ADD의 충돌이 쉬프트로 결정됨 (ASS < ADD).
    룰 82과 토큰 SUB의 충돌이 쉬프트로 결정됨 (ASS < SUB).
    룰 82과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ASS < MUL).
    룰 82과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ASS < DIV).


State 139

  102 expr: expr EQUAL error .

    $default  reduce using rule 102 (expr)


State 140

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   87     | expr EQUAL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 87 (expr)

    룰 87과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUAL).
    룰 87과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 87과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 87과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 87과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 87과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 87과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 87과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 87과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUAL < ADD).
    룰 87과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUAL < SUB).
    룰 87과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUAL < MUL).
    룰 87과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUAL < DIV).


State 141

  103 expr: expr NOTEQU error .

    $default  reduce using rule 103 (expr)


State 142

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   88     | expr NOTEQU expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 88 (expr)

    룰 88과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOTEQU).
    룰 88과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 88과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 88과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 88과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 88과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 88과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 88과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 88과 토큰 ADD의 충돌이 쉬프트로 결정됨 (NOTEQU < ADD).
    룰 88과 토큰 SUB의 충돌이 쉬프트로 결정됨 (NOTEQU < SUB).
    룰 88과 토큰 MUL의 충돌이 쉬프트로 결정됨 (NOTEQU < MUL).
    룰 88과 토큰 DIV의 충돌이 쉬프트로 결정됨 (NOTEQU < DIV).


State 143

   98 expr: expr GREATER error .

    $default  reduce using rule 98 (expr)


State 144

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   83     | expr GREATER expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 83 (expr)

    룰 83과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < GREATER).
    룰 83과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 83과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 83과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 83과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 83과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 83과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 83과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 83과 토큰 ADD의 충돌이 쉬프트로 결정됨 (GREATER < ADD).
    룰 83과 토큰 SUB의 충돌이 쉬프트로 결정됨 (GREATER < SUB).
    룰 83과 토큰 MUL의 충돌이 쉬프트로 결정됨 (GREATER < MUL).
    룰 83과 토큰 DIV의 충돌이 쉬프트로 결정됨 (GREATER < DIV).


State 145

   99 expr: expr EQUGRE error .

    $default  reduce using rule 99 (expr)


State 146

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   84     | expr EQUGRE expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 84 (expr)

    룰 84과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUGRE).
    룰 84과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 84과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 84과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 84과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 84과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 84과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 84과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 84과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUGRE < ADD).
    룰 84과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUGRE < SUB).
    룰 84과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUGRE < MUL).
    룰 84과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUGRE < DIV).


State 147

  100 expr: expr LESS error .

    $default  reduce using rule 100 (expr)


State 148

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   85     | expr LESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 85 (expr)

    룰 85과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < LESS).
    룰 85과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 85과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 85과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 85과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 85과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 85과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 85과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 85과 토큰 ADD의 충돌이 쉬프트로 결정됨 (LESS < ADD).
    룰 85과 토큰 SUB의 충돌이 쉬프트로 결정됨 (LESS < SUB).
    룰 85과 토큰 MUL의 충돌이 쉬프트로 결정됨 (LESS < MUL).
    룰 85과 토큰 DIV의 충돌이 쉬프트로 결정됨 (LESS < DIV).


State 149

  101 expr: expr EQULESS error .

    $default  reduce using rule 101 (expr)


State 150

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   86     | expr EQULESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 86 (expr)

    룰 86과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQULESS).
    룰 86과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 86과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 86과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 86과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 86과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 86과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 86과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 86과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQULESS < ADD).
    룰 86과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQULESS < SUB).
    룰 86과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQULESS < MUL).
    룰 86과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQULESS < DIV).


State 151

  108 expr: expr IN error .

    $default  reduce using rule 108 (expr)


State 152

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   93     | expr IN expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    ADD  shift, and go to state 106
    SUB  shift, and go to state 107
    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 93 (expr)

    룰 93과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 93과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 93과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 93과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 93과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 93과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 93과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 93과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 93과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 93과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 93과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 93과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 153

  104 expr: expr ADD error .

    $default  reduce using rule 104 (expr)


State 154

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   89     | expr ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 89 (expr)

    룰 89과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < ADD).
    룰 89과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < ADD).
    룰 89과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < ADD).
    룰 89과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < ADD).
    룰 89과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < ADD).
    룰 89과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < ADD).
    룰 89과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < ADD).
    룰 89과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < ADD).
    룰 89과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 89과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 89과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ADD < MUL).
    룰 89과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ADD < DIV).


State 155

  105 expr: expr SUB error .

    $default  reduce using rule 105 (expr)


State 156

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   90     | expr SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    MUL  shift, and go to state 108
    DIV  shift, and go to state 109

    $default  reduce using rule 90 (expr)

    룰 90과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < SUB).
    룰 90과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < SUB).
    룰 90과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < SUB).
    룰 90과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < SUB).
    룰 90과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < SUB).
    룰 90과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < SUB).
    룰 90과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < SUB).
    룰 90과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < SUB).
    룰 90과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 90과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 90과 토큰 MUL의 충돌이 쉬프트로 결정됨 (SUB < MUL).
    룰 90과 토큰 DIV의 충돌이 쉬프트로 결정됨 (SUB < DIV).


State 157

  106 expr: expr MUL error .

    $default  reduce using rule 106 (expr)


State 158

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   91     | expr MUL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    $default  reduce using rule 91 (expr)

    룰 91과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < MUL).
    룰 91과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < MUL).
    룰 91과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < MUL).
    룰 91과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < MUL).
    룰 91과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < MUL).
    룰 91과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < MUL).
    룰 91과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < MUL).
    룰 91과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < MUL).
    룰 91과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < MUL).
    룰 91과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < MUL).
    룰 91과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 91과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 159

  107 expr: expr DIV error .

    $default  reduce using rule 107 (expr)


State 160

   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   92     | expr DIV expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    $default  reduce using rule 92 (expr)

    룰 92과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < DIV).
    룰 92과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < DIV).
    룰 92과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < DIV).
    룰 92과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < DIV).
    룰 92과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < DIV).
    룰 92과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < DIV).
    룰 92과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < DIV).
    룰 92과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < DIV).
    룰 92과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < DIV).
    룰 92과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < DIV).
    룰 92과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 92과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 161

   39 param: IDENT error type .

    $default  reduce using rule 39 (param)


State 162

   40 param: IDENT ":" IDENT .

    $default  reduce using rule 40 (param)


State 163

   38 param: IDENT ":" type .  [error, ")", ","]
   41      | IDENT ":" type . error

    error  shift, and go to state 176

    error  [reduce using rule 38 (param)]
    ")"    reduce using rule 38 (param)
    ","    reduce using rule 38 (param)


State 164

   37 params: param "," params .

    $default  reduce using rule 37 (params)


State 165

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   60   | IF expr error . stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 177
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 166

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   59   | IF expr ":" . stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 178
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 167

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   68      | WHILE expr error . stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 179
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 168

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   67      | WHILE expr ":" . stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 180
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 169

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   69 for: FOR expr IN . expr ":" stmt else
   70    | FOR expr IN . expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   93     | expr IN . expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  108     | expr IN . error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error   shift, and go to state 151
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 181
    term           go to state 58


State 170

   75 procedure: IDENT "(" expr_list error .

    $default  reduce using rule 75 (procedure)


State 171

   74 procedure: IDENT "(" expr_list ")" .

    $default  reduce using rule 74 (procedure)


State 172

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   78 exprs: . expr
   79      | . expr "," exprs
   80      | . expr error exprs
   80      | expr error . exprs
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    exprs          go to state 182
    expr           go to state 133
    term           go to state 58


State 173

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   78 exprs: . expr
   79      | . expr "," exprs
   79      | expr "," . exprs
   80      | . expr error exprs
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    exprs          go to state 183
    expr           go to state 133
    term           go to state 58


State 174

   73 variable: IDENT "[" expr error .

    $default  reduce using rule 73 (variable)


State 175

   72 variable: IDENT "[" expr "]" .

    $default  reduce using rule 72 (variable)


State 176

   41 param: IDENT ":" type error .

    $default  reduce using rule 41 (param)


State 177

   60 if: IF expr error stmt . elif else
   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 184

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 185


State 178

   59 if: IF expr ":" stmt . elif else
   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 184

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 186


State 179

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt
   68 while: WHILE expr error stmt . else

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 188


State 180

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt
   67 while: WHILE expr ":" stmt . else

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 189


State 181

   69 for: FOR expr IN expr . ":" stmt else
   70    | FOR expr IN expr . error stmt else
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   93     | expr IN expr .  [ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN]
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error  shift, and go to state 190
    ADD    shift, and go to state 106
    SUB    shift, and go to state 107
    MUL    shift, and go to state 108
    DIV    shift, and go to state 109
    ":"    shift, and go to state 191

    ASS      reduce using rule 93 (expr)
    EQUAL    reduce using rule 93 (expr)
    NOTEQU   reduce using rule 93 (expr)
    GREATER  reduce using rule 93 (expr)
    EQUGRE   reduce using rule 93 (expr)
    LESS     reduce using rule 93 (expr)
    EQULESS  reduce using rule 93 (expr)
    IN       reduce using rule 93 (expr)

    룰 93과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 93과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 93과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 93과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 93과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 93과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 93과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 93과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 93과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 93과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 93과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 93과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 182

   80 exprs: expr error exprs .

    $default  reduce using rule 80 (exprs)


State 183

   79 exprs: expr "," exprs .

    $default  reduce using rule 79 (exprs)


State 184

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   61 elif: ELIF . expr ":" stmt elif
   63     | ELIF . expr error stmt elif
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 192
    term           go to state 58


State 185

   60 if: IF expr error stmt elif . else
   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 193


State 186

   59 if: IF expr ":" stmt elif . else
   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 194


State 187

   64 else: ELSE . ":" stmt
   66     | ELSE . error stmt

    error  shift, and go to state 195
    ":"    shift, and go to state 196


State 188

   68 while: WHILE expr error stmt else .

    $default  reduce using rule 68 (while)


State 189

   67 while: WHILE expr ":" stmt else .

    $default  reduce using rule 67 (while)


State 190

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   70    | FOR expr IN expr error . stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 197
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 191

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   69    | FOR expr IN expr ":" . stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 198
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 192

   61 elif: ELIF expr . ":" stmt elif
   63     | ELIF expr . error stmt elif
   82 expr: expr . ASS expr
   83     | expr . GREATER expr
   84     | expr . EQUGRE expr
   85     | expr . LESS expr
   86     | expr . EQULESS expr
   87     | expr . EQUAL expr
   88     | expr . NOTEQU expr
   89     | expr . ADD expr
   90     | expr . SUB expr
   91     | expr . MUL expr
   92     | expr . DIV expr
   93     | expr . IN expr
   97     | expr . ASS error
   98     | expr . GREATER error
   99     | expr . EQUGRE error
  100     | expr . LESS error
  101     | expr . EQULESS error
  102     | expr . EQUAL error
  103     | expr . NOTEQU error
  104     | expr . ADD error
  105     | expr . SUB error
  106     | expr . MUL error
  107     | expr . DIV error
  108     | expr . IN error

    error    shift, and go to state 199
    ASS      shift, and go to state 98
    EQUAL    shift, and go to state 99
    NOTEQU   shift, and go to state 100
    GREATER  shift, and go to state 101
    EQUGRE   shift, and go to state 102
    LESS     shift, and go to state 103
    EQULESS  shift, and go to state 104
    IN       shift, and go to state 105
    ADD      shift, and go to state 106
    SUB      shift, and go to state 107
    MUL      shift, and go to state 108
    DIV      shift, and go to state 109
    ":"      shift, and go to state 200


State 193

   60 if: IF expr error stmt elif else .

    $default  reduce using rule 60 (if)


State 194

   59 if: IF expr ":" stmt elif else .

    $default  reduce using rule 59 (if)


State 195

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   66 else: ELSE error . stmt
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 201
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 196

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   64 else: ELSE ":" . stmt
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 202
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 197

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt
   70 for: FOR expr IN expr error stmt . else

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 203


State 198

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   66     | . ELSE error stmt
   69 for: FOR expr IN expr ":" stmt . else

    ELSE  shift, and go to state 187

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 204


State 199

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   63 elif: ELIF expr error . stmt elif
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 205
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 200

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17     | . standard_type "[" error
   18     | . standard_type "[" error "]"
   19     | . standard_type NUMBER "]"
   20     | . standard_type NUMBER error
   21     | . standard_type "]"
   22 standard_type: . INT
   23              | . FLOAT
   42 block: . BEG declarations stmts END
   43      | . BEG declarations stmts error
   46 stmt: . stmt_semi ";"
   47     | . stmt_semi error
   48     | . error ";"
   49     | . block
   50     | . if
   51     | . while
   52     | . for
   53 stmt_semi: . expr
   54          | . BREAK
   55          | . CONTINUE
   56          | . RETURN expr
   57          | . RETURN error
   58          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   61 elif: ELIF expr ":" . stmt elif
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   71 variable: . IDENT
   72         | . IDENT "[" expr "]"
   73         | . IDENT "[" expr error
   74 procedure: . IDENT "(" expr_list ")"
   75          | . IDENT "(" expr_list error
   81 expr: . term
   82     | . expr ASS expr
   83     | . expr GREATER expr
   84     | . expr EQUGRE expr
   85     | . expr LESS expr
   86     | . expr EQULESS expr
   87     | . expr EQUAL expr
   88     | . expr NOTEQU expr
   89     | . expr ADD expr
   90     | . expr SUB expr
   91     | . expr MUL expr
   92     | . expr DIV expr
   93     | . expr IN expr
   94     | . ADD expr
   95     | . SUB expr
   96     | . NOT expr
   97     | . expr ASS error
   98     | . expr GREATER error
   99     | . expr EQUGRE error
  100     | . expr LESS error
  101     | . expr EQULESS error
  102     | . expr EQUAL error
  103     | . expr NOTEQU error
  104     | . expr ADD error
  105     | . expr SUB error
  106     | . expr MUL error
  107     | . expr DIV error
  108     | . expr IN error
  109     | . ADD error
  110     | . SUB error
  111     | . NOT error
  112 term: . NUMBER
  113     | . variable
  114     | . procedure
  115     | . "(" expr ")"
  116     | . "(" expr error
  117     | . type term
  118     | . type

    error     shift, and go to state 72
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 73
    CONTINUE  shift, and go to state 74
    NOP       shift, and go to state 75
    WHILE     shift, and go to state 76
    RETURN    shift, and go to state 77
    BREAK     shift, and go to state 78
    FOR       shift, and go to state 79
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 54
    standard_type  go to state 11
    block          go to state 80
    stmt           go to state 206
    stmt_semi      go to state 83
    if             go to state 84
    while          go to state 85
    for            go to state 86
    variable       go to state 55
    procedure      go to state 56
    expr           go to state 87
    term           go to state 58


State 201

   66 else: ELSE error stmt .

    $default  reduce using rule 66 (else)


State 202

   64 else: ELSE ":" stmt .

    $default  reduce using rule 64 (else)


State 203

   70 for: FOR expr IN expr error stmt else .

    $default  reduce using rule 70 (for)


State 204

   69 for: FOR expr IN expr ":" stmt else .

    $default  reduce using rule 69 (for)


State 205

   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   63     | . ELIF expr error stmt elif
   63     | ELIF expr error stmt . elif

    ELIF  shift, and go to state 184

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 207


State 206

   61 elif: . ELIF expr ":" stmt elif
   61     | ELIF expr ":" stmt . elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 184

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 208


State 207

   63 elif: ELIF expr error stmt elif .

    $default  reduce using rule 63 (elif)


State 208

   61 elif: ELIF expr ":" stmt elif .

    $default  reduce using rule 61 (elif)
