State 46 충돌: 1 쉬프트/리듀스
State 73 충돌: 1 쉬프트/리듀스
State 78 충돌: 1 쉬프트/리듀스
State 101 충돌: 1 쉬프트/리듀스
State 114 충돌: 2 리듀스/리듀스
State 140 충돌: 1 쉬프트/리듀스
State 143 충돌: 1 쉬프트/리듀스
State 157 충돌: 1 쉬프트/리듀스
State 158 충돌: 1 쉬프트/리듀스
State 159 충돌: 1 쉬프트/리듀스
State 160 충돌: 1 쉬프트/리듀스
State 165 충돌: 1 쉬프트/리듀스
State 166 충돌: 1 쉬프트/리듀스
State 177 충돌: 1 쉬프트/리듀스
State 178 충돌: 1 쉬프트/리듀스
State 185 충돌: 1 쉬프트/리듀스
State 186 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: MAINPROG IDENT ";" declarations subprograms
    2        | MAINPROG error ";" declarations subprograms
    3        | MAINPROG IDENT error declarations subprograms
    4        | MAINPROG error declarations subprograms

    5 declarations: type identifier_list ";" declarations
    6             | type identifier_list error declarations
    7             | %empty

    8 identifier_list: IDENT init
    9                | IDENT init "," identifier_list
   10                | error

   11 init: ASS expr
   12     | %empty

   13 type: standard_type
   14     | standard_type "[" NUMBER "]"
   15     | standard_type "[" NUMBER error
   16     | standard_type "[" error
   17     | standard_type "[" error "]"
   18     | standard_type NUMBER "]"
   19     | standard_type NUMBER error
   20     | standard_type "]"

   21 standard_type: INT
   22              | FLOAT

   23 subprograms: subprogram subprograms
   24            | %empty

   25 subprogram: subprogram_head block

   26 subprogram_head: FUNCTION IDENT args ":" type
   27                | FUNCTION error args ":" type
   28                | FUNCTION IDENT args error type
   29                | FUNCTION error args error type
   30                | FUNCTION IDENT args
   31                | FUNCTION error args

   32 args: "(" params ")"
   33     | "(" params error
   34     | %empty

   35 params: param
   36       | param "," params

   37 param: IDENT ":" type
   38      | IDENT error type
   39      | IDENT ":" error
   40      | IDENT ":" type error

   41 block: BEG declarations stmts END
   42      | BEG declarations stmts error

   43 stmts: stmt stmts
   44      | %empty

   45 stmt: stmt_semi ";"
   46     | stmt_semi error
   47     | block
   48     | if
   49     | while
   50     | for

   51 stmt_semi: expr
   52          | BREAK
   53          | CONTINUE
   54          | RETURN ret_expr
   55          | NOP

   56 ret_expr: expr
   57         | %empty
   58         | error

   59 if: IF expr ":" stmt elif else
   60   | IF expr error stmt elif else

   61 elif: ELIF expr ":" stmt elif
   62     | %empty
   63     | ELIF expr error stmt elif

   64 else: ELSE ":" stmt
   65     | %empty
   66     | ELSE error stmt

   67 while: WHILE expr ":" stmt else
   68      | WHILE expr error stmt else

   69 for: FOR expr IN expr ":" stmt else
   70    | FOR expr IN expr error stmt else

   71 expr_list: exprs
   72          | %empty

   73 exprs: expr
   74      | expr "," exprs
   75      | expr error exprs

   76 expr: term
   77     | expr ASS expr
   78     | expr GREATER expr
   79     | expr EQUGRE expr
   80     | expr LESS expr
   81     | expr EQULESS expr
   82     | expr EQUAL expr
   83     | expr NOTEQU expr
   84     | expr ADD expr
   85     | expr SUB expr
   86     | expr MUL expr
   87     | expr DIV expr
   88     | expr IN expr
   89     | expr "[" expr "]"
   90     | expr "(" expr_list ")"
   91     | ADD expr
   92     | SUB expr
   93     | NOT expr
   94     | expr "[" expr error
   95     | expr "(" expr_list error

   96 term: NUMBER
   97     | IDENT
   98     | "(" expr ")"
   99     | "(" expr error
  100     | error


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 4 6 10 15 16 17 19 27 28 29 31 33 38 39 40 42 46 58
    60 63 66 68 70 75 94 95 99 100
NUMBER (258) 14 15 18 19 96
IDENT (259) 1 3 8 9 26 28 30 37 38 39 40 97
ASS (260) 11 77
EQUAL (261) 82
NOTEQU (262) 83
GREATER (263) 78
EQUGRE (264) 79
LESS (265) 80
EQULESS (266) 81
IN (267) 69 70 88
ADD (268) 84 91
SUB (269) 85 92
MUL (270) 86
DIV (271) 87
UMINUS (272)
UPLUS (273)
NOT (274) 93
"[" (275) 14 15 16 17 89 94
"(" (276) 32 33 90 95 98 99
")" (277) 32 90 98
"]" (278) 14 17 18 20 89
"," (279) 9 36 74
";" (280) 1 2 5 45
":" (281) 26 27 37 39 40 59 61 64 67 69
MAINPROG (282) 1 2 3 4
FUNCTION (283) 26 27 28 29 30 31
BEG (284) 41 42
END (285) 41
IF (286) 59 60
CONTINUE (287) 53
ELIF (288) 61 63
ELSE (289) 64 66
NOP (290) 55
WHILE (291) 67 68
RETURN (292) 54
BREAK (293) 52
FOR (294) 69 70
INT (295) 21
FLOAT (296) 22


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2 3 4, on right: 0
declarations (44)
    on left: 5 6 7, on right: 1 2 3 4 5 6 41 42
identifier_list (45)
    on left: 8 9 10, on right: 5 6 9
init (46)
    on left: 11 12, on right: 8 9
type (47)
    on left: 13 14 15 16 17 18 19 20, on right: 5 6 26 27 28 29 37
    38 40
standard_type (48)
    on left: 21 22, on right: 13 14 15 16 17 18 19 20
subprograms (49)
    on left: 23 24, on right: 1 2 3 4 23
subprogram (50)
    on left: 25, on right: 23
subprogram_head (51)
    on left: 26 27 28 29 30 31, on right: 25
args (52)
    on left: 32 33 34, on right: 26 27 28 29 30 31
params (53)
    on left: 35 36, on right: 32 33 36
param (54)
    on left: 37 38 39 40, on right: 35 36
block (55)
    on left: 41 42, on right: 25 47
stmts (56)
    on left: 43 44, on right: 41 42 43
stmt (57)
    on left: 45 46 47 48 49 50, on right: 43 59 60 61 63 64 66 67 68
    69 70
stmt_semi (58)
    on left: 51 52 53 54 55, on right: 45 46
ret_expr (59)
    on left: 56 57 58, on right: 54
if (60)
    on left: 59 60, on right: 48
elif (61)
    on left: 61 62 63, on right: 59 60 61 63
else (62)
    on left: 64 65 66, on right: 59 60 67 68 69 70
while (63)
    on left: 67 68, on right: 49
for (64)
    on left: 69 70, on right: 50
expr_list (65)
    on left: 71 72, on right: 90 95
exprs (66)
    on left: 73 74 75, on right: 71 74 75
expr (67)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95, on right: 11 51 56 59 60 61 63 67 68 69 70 73 74 75 77 78
    79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 98 99
term (68)
    on left: 96 97 98 99 100, on right: 76


State 0

    0 $accept: . program $end
    1 program: . MAINPROG IDENT ";" declarations subprograms
    2        | . MAINPROG error ";" declarations subprograms
    3        | . MAINPROG IDENT error declarations subprograms
    4        | . MAINPROG error declarations subprograms

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . IDENT ";" declarations subprograms
    2        | MAINPROG . error ";" declarations subprograms
    3        | MAINPROG . IDENT error declarations subprograms
    4        | MAINPROG . error declarations subprograms

    error  shift, and go to state 3
    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: MAINPROG error . ";" declarations subprograms
    4        | MAINPROG error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    ";"    shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 4

    1 program: MAINPROG IDENT . ";" declarations subprograms
    3        | MAINPROG IDENT . error declarations subprograms

    error  shift, and go to state 12
    ";"    shift, and go to state 13


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: MAINPROG error ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 14
    type           go to state 10
    standard_type  go to state 11


State 7

   21 standard_type: INT .

    $default  reduce using rule 21 (standard_type)


State 8

   22 standard_type: FLOAT .

    $default  reduce using rule 22 (standard_type)


State 9

    4 program: MAINPROG error declarations . subprograms
   23 subprograms: . subprogram subprograms
   24            | . %empty  [$end]
   25 subprogram: . subprogram_head block
   26 subprogram_head: . FUNCTION IDENT args ":" type
   27                | . FUNCTION error args ":" type
   28                | . FUNCTION IDENT args error type
   29                | . FUNCTION error args error type
   30                | . FUNCTION IDENT args
   31                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 24 (subprograms)

    subprograms      go to state 16
    subprogram       go to state 17
    subprogram_head  go to state 18


State 10

    5 declarations: type . identifier_list ";" declarations
    6             | type . identifier_list error declarations
    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 21


State 11

   13 type: standard_type .  [error, IDENT, ")", ",", BEG]
   14     | standard_type . "[" NUMBER "]"
   15     | standard_type . "[" NUMBER error
   16     | standard_type . "[" error
   17     | standard_type . "[" error "]"
   18     | standard_type . NUMBER "]"
   19     | standard_type . NUMBER error
   20     | standard_type . "]"

    NUMBER  shift, and go to state 22
    "["     shift, and go to state 23
    "]"     shift, and go to state 24

    $default  reduce using rule 13 (type)


State 12

    3 program: MAINPROG IDENT error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 25
    type           go to state 10
    standard_type  go to state 11


State 13

    1 program: MAINPROG IDENT ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 26
    type           go to state 10
    standard_type  go to state 11


State 14

    2 program: MAINPROG error ";" declarations . subprograms
   23 subprograms: . subprogram subprograms
   24            | . %empty  [$end]
   25 subprogram: . subprogram_head block
   26 subprogram_head: . FUNCTION IDENT args ":" type
   27                | . FUNCTION error args ":" type
   28                | . FUNCTION IDENT args error type
   29                | . FUNCTION error args error type
   30                | . FUNCTION IDENT args
   31                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 24 (subprograms)

    subprograms      go to state 27
    subprogram       go to state 17
    subprogram_head  go to state 18


State 15

   26 subprogram_head: FUNCTION . IDENT args ":" type
   27                | FUNCTION . error args ":" type
   28                | FUNCTION . IDENT args error type
   29                | FUNCTION . error args error type
   30                | FUNCTION . IDENT args
   31                | FUNCTION . error args

    error  shift, and go to state 28
    IDENT  shift, and go to state 29


State 16

    4 program: MAINPROG error declarations subprograms .

    $default  reduce using rule 4 (program)


State 17

   23 subprograms: . subprogram subprograms
   23            | subprogram . subprograms
   24            | . %empty  [$end]
   25 subprogram: . subprogram_head block
   26 subprogram_head: . FUNCTION IDENT args ":" type
   27                | . FUNCTION error args ":" type
   28                | . FUNCTION IDENT args error type
   29                | . FUNCTION error args error type
   30                | . FUNCTION IDENT args
   31                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 24 (subprograms)

    subprograms      go to state 30
    subprogram       go to state 17
    subprogram_head  go to state 18


State 18

   25 subprogram: subprogram_head . block
   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error

    BEG  shift, and go to state 31

    block  go to state 32


State 19

   10 identifier_list: error .

    $default  reduce using rule 10 (identifier_list)


State 20

    8 identifier_list: IDENT . init
    9                | IDENT . init "," identifier_list
   11 init: . ASS expr
   12     | . %empty  [error, ",", ";"]

    ASS  shift, and go to state 33

    $default  reduce using rule 12 (init)

    init  go to state 34


State 21

    5 declarations: type identifier_list . ";" declarations
    6             | type identifier_list . error declarations

    error  shift, and go to state 35
    ";"    shift, and go to state 36


State 22

   18 type: standard_type NUMBER . "]"
   19     | standard_type NUMBER . error

    error  shift, and go to state 37
    "]"    shift, and go to state 38


State 23

   14 type: standard_type "[" . NUMBER "]"
   15     | standard_type "[" . NUMBER error
   16     | standard_type "[" . error
   17     | standard_type "[" . error "]"

    error   shift, and go to state 39
    NUMBER  shift, and go to state 40


State 24

   20 type: standard_type "]" .

    $default  reduce using rule 20 (type)


State 25

    3 program: MAINPROG IDENT error declarations . subprograms
   23 subprograms: . subprogram subprograms
   24            | . %empty  [$end]
   25 subprogram: . subprogram_head block
   26 subprogram_head: . FUNCTION IDENT args ":" type
   27                | . FUNCTION error args ":" type
   28                | . FUNCTION IDENT args error type
   29                | . FUNCTION error args error type
   30                | . FUNCTION IDENT args
   31                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 24 (subprograms)

    subprograms      go to state 41
    subprogram       go to state 17
    subprogram_head  go to state 18


State 26

    1 program: MAINPROG IDENT ";" declarations . subprograms
   23 subprograms: . subprogram subprograms
   24            | . %empty  [$end]
   25 subprogram: . subprogram_head block
   26 subprogram_head: . FUNCTION IDENT args ":" type
   27                | . FUNCTION error args ":" type
   28                | . FUNCTION IDENT args error type
   29                | . FUNCTION error args error type
   30                | . FUNCTION IDENT args
   31                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 24 (subprograms)

    subprograms      go to state 42
    subprogram       go to state 17
    subprogram_head  go to state 18


State 27

    2 program: MAINPROG error ";" declarations subprograms .

    $default  reduce using rule 2 (program)


State 28

   27 subprogram_head: FUNCTION error . args ":" type
   29                | FUNCTION error . args error type
   31                | FUNCTION error . args
   32 args: . "(" params ")"
   33     | . "(" params error
   34     | . %empty  [error, ":", BEG]

    "("  shift, and go to state 43

    $default  reduce using rule 34 (args)

    args  go to state 44


State 29

   26 subprogram_head: FUNCTION IDENT . args ":" type
   28                | FUNCTION IDENT . args error type
   30                | FUNCTION IDENT . args
   32 args: . "(" params ")"
   33     | . "(" params error
   34     | . %empty  [error, ":", BEG]

    "("  shift, and go to state 43

    $default  reduce using rule 34 (args)

    args  go to state 45


State 30

   23 subprograms: subprogram subprograms .

    $default  reduce using rule 23 (subprograms)


State 31

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   41 block: BEG . declarations stmts END
   42      | BEG . declarations stmts error

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 46
    type           go to state 10
    standard_type  go to state 11


State 32

   25 subprogram: subprogram_head block .

    $default  reduce using rule 25 (subprogram)


State 33

   11 init: ASS . expr
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 54
    term  go to state 55


State 34

    8 identifier_list: IDENT init .  [error, ";"]
    9                | IDENT init . "," identifier_list

    ","  shift, and go to state 56

    $default  reduce using rule 8 (identifier_list)


State 35

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    6             | type identifier_list error . declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 57
    type           go to state 10
    standard_type  go to state 11


State 36

    5 declarations: . type identifier_list ";" declarations
    5             | type identifier_list ";" . declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR]
   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 58
    type           go to state 10
    standard_type  go to state 11


State 37

   19 type: standard_type NUMBER error .

    $default  reduce using rule 19 (type)


State 38

   18 type: standard_type NUMBER "]" .

    $default  reduce using rule 18 (type)


State 39

   16 type: standard_type "[" error .  [error, IDENT, ")", ",", BEG]
   17     | standard_type "[" error . "]"

    "]"  shift, and go to state 59

    $default  reduce using rule 16 (type)


State 40

   14 type: standard_type "[" NUMBER . "]"
   15     | standard_type "[" NUMBER . error

    error  shift, and go to state 60
    "]"    shift, and go to state 61


State 41

    3 program: MAINPROG IDENT error declarations subprograms .

    $default  reduce using rule 3 (program)


State 42

    1 program: MAINPROG IDENT ";" declarations subprograms .

    $default  reduce using rule 1 (program)


State 43

   32 args: "(" . params ")"
   33     | "(" . params error
   35 params: . param
   36       | . param "," params
   37 param: . IDENT ":" type
   38      | . IDENT error type
   39      | . IDENT ":" error
   40      | . IDENT ":" type error

    IDENT  shift, and go to state 62

    params  go to state 63
    param   go to state 64


State 44

   27 subprogram_head: FUNCTION error args . ":" type
   29                | FUNCTION error args . error type
   31                | FUNCTION error args .  [BEG]

    error  shift, and go to state 65
    ":"    shift, and go to state 66

    BEG  reduce using rule 31 (subprogram_head)


State 45

   26 subprogram_head: FUNCTION IDENT args . ":" type
   28                | FUNCTION IDENT args . error type
   30                | FUNCTION IDENT args .  [BEG]

    error  shift, and go to state 67
    ":"    shift, and go to state 68

    BEG  reduce using rule 30 (subprogram_head)


State 46

   41 block: . BEG declarations stmts END
   41      | BEG declarations . stmts END
   42      | . BEG declarations stmts error
   42      | BEG declarations . stmts error
   43 stmts: . stmt stmts
   44      | . %empty  [error, END]
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    error  [reduce using rule 44 (stmts)]
    END    reduce using rule 44 (stmts)

    block      go to state 76
    stmts      go to state 77
    stmt       go to state 78
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 47

  100 term: error .

    $default  reduce using rule 100 (term)


State 48

   96 term: NUMBER .

    $default  reduce using rule 96 (term)


State 49

   97 term: IDENT .

    $default  reduce using rule 97 (term)


State 50

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   91     | ADD . expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 84
    term  go to state 55


State 51

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   92     | SUB . expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 85
    term  go to state 55


State 52

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   93     | NOT . expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 86
    term  go to state 55


State 53

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   98     | "(" . expr ")"
   99     | . "(" expr error
   99     | "(" . expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 87
    term  go to state 55


State 54

   11 init: ASS expr .  [error, ",", ";"]
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101

    $default  reduce using rule 11 (init)


State 55

   76 expr: term .

    $default  reduce using rule 76 (expr)


State 56

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
    9                | IDENT init "," . identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 102


State 57

    6 declarations: type identifier_list error declarations .

    $default  reduce using rule 6 (declarations)


State 58

    5 declarations: type identifier_list ";" declarations .

    $default  reduce using rule 5 (declarations)


State 59

   17 type: standard_type "[" error "]" .

    $default  reduce using rule 17 (type)


State 60

   15 type: standard_type "[" NUMBER error .

    $default  reduce using rule 15 (type)


State 61

   14 type: standard_type "[" NUMBER "]" .

    $default  reduce using rule 14 (type)


State 62

   37 param: IDENT . ":" type
   38      | IDENT . error type
   39      | IDENT . ":" error
   40      | IDENT . ":" type error

    error  shift, and go to state 103
    ":"    shift, and go to state 104


State 63

   32 args: "(" params . ")"
   33     | "(" params . error

    error  shift, and go to state 105
    ")"    shift, and go to state 106


State 64

   35 params: param .  [error, ")"]
   36       | param . "," params

    ","  shift, and go to state 107

    $default  reduce using rule 35 (params)


State 65

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   29 subprogram_head: FUNCTION error args error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 108
    standard_type  go to state 11


State 66

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   27 subprogram_head: FUNCTION error args ":" . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 109
    standard_type  go to state 11


State 67

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   28 subprogram_head: FUNCTION IDENT args error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 110
    standard_type  go to state 11


State 68

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   26 subprogram_head: FUNCTION IDENT args ":" . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 111
    standard_type  go to state 11


State 69

   59 if: IF . expr ":" stmt elif else
   60   | IF . expr error stmt elif else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 112
    term  go to state 55


State 70

   53 stmt_semi: CONTINUE .

    $default  reduce using rule 53 (stmt_semi)


State 71

   55 stmt_semi: NOP .

    $default  reduce using rule 55 (stmt_semi)


State 72

   67 while: WHILE . expr ":" stmt else
   68      | WHILE . expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 113
    term  go to state 55


State 73

   54 stmt_semi: RETURN . ret_expr
   56 ret_expr: . expr
   57         | . %empty  [error, ";"]
   58         | . error
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 114
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    error  [reduce using rule 57 (ret_expr)]
    ";"    reduce using rule 57 (ret_expr)

    ret_expr  go to state 115
    expr      go to state 116
    term      go to state 55


State 74

   52 stmt_semi: BREAK .

    $default  reduce using rule 52 (stmt_semi)


State 75

   69 for: FOR . expr IN expr ":" stmt else
   70    | FOR . expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 117
    term  go to state 55


State 76

   47 stmt: block .

    $default  reduce using rule 47 (stmt)


State 77

   41 block: BEG declarations stmts . END
   42      | BEG declarations stmts . error

    error  shift, and go to state 118
    END    shift, and go to state 119


State 78

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   43 stmts: . stmt stmts
   43      | stmt . stmts
   44      | . %empty  [error, END]
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    error  [reduce using rule 44 (stmts)]
    END    reduce using rule 44 (stmts)

    block      go to state 76
    stmts      go to state 120
    stmt       go to state 78
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 79

   45 stmt: stmt_semi . ";"
   46     | stmt_semi . error

    error  shift, and go to state 121
    ";"    shift, and go to state 122


State 80

   48 stmt: if .

    $default  reduce using rule 48 (stmt)


State 81

   49 stmt: while .

    $default  reduce using rule 49 (stmt)


State 82

   50 stmt: for .

    $default  reduce using rule 50 (stmt)


State 83

   51 stmt_semi: expr .  [error, ";"]
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101

    $default  reduce using rule 51 (stmt_semi)


State 84

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   91     | ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 91 (expr)

    룰 91과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UPLUS).
    룰 91과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UPLUS).
    룰 91과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UPLUS).
    룰 91과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UPLUS).
    룰 91과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UPLUS).
    룰 91과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UPLUS).
    룰 91과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UPLUS).
    룰 91과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UPLUS).
    룰 91과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UPLUS).
    룰 91과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UPLUS).
    룰 91과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UPLUS).
    룰 91과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UPLUS).
    룰 91과 토큰 "["의 충돌이 쉬프트로 결정됨 (UPLUS < "[").
    룰 91과 토큰 "("의 충돌이 쉬프트로 결정됨 (UPLUS < "(").


State 85

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   92     | SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 92 (expr)

    룰 92과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UMINUS).
    룰 92과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UMINUS).
    룰 92과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UMINUS).
    룰 92과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UMINUS).
    룰 92과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UMINUS).
    룰 92과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UMINUS).
    룰 92과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UMINUS).
    룰 92과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UMINUS).
    룰 92과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UMINUS).
    룰 92과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UMINUS).
    룰 92과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UMINUS).
    룰 92과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UMINUS).
    룰 92과 토큰 "["의 충돌이 쉬프트로 결정됨 (UMINUS < "[").
    룰 92과 토큰 "("의 충돌이 쉬프트로 결정됨 (UMINUS < "(").


State 86

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   93     | NOT expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 93 (expr)

    룰 93과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOT).
    룰 93과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < NOT).
    룰 93과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < NOT).
    룰 93과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < NOT).
    룰 93과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < NOT).
    룰 93과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < NOT).
    룰 93과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < NOT).
    룰 93과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < NOT).
    룰 93과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < NOT).
    룰 93과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < NOT).
    룰 93과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < NOT).
    룰 93과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < NOT).
    룰 93과 토큰 "["의 충돌이 쉬프트로 결정됨 (NOT < "[").
    룰 93과 토큰 "("의 충돌이 쉬프트로 결정됨 (NOT < "(").


State 87

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error
   98 term: "(" expr . ")"
   99     | "(" expr . error

    error    shift, and go to state 123
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    ")"      shift, and go to state 124


State 88

   76 expr: . term
   77     | . expr ASS expr
   77     | expr ASS . expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 125
    term  go to state 55


State 89

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   82     | expr EQUAL . expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 126
    term  go to state 55


State 90

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   83     | expr NOTEQU . expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 127
    term  go to state 55


State 91

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   78     | expr GREATER . expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 128
    term  go to state 55


State 92

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   79     | expr EQUGRE . expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 129
    term  go to state 55


State 93

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   80     | expr LESS . expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 130
    term  go to state 55


State 94

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   81     | expr EQULESS . expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 131
    term  go to state 55


State 95

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   88     | expr IN . expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 132
    term  go to state 55


State 96

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   84     | expr ADD . expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 133
    term  go to state 55


State 97

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   85     | expr SUB . expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 134
    term  go to state 55


State 98

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   86     | expr MUL . expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 135
    term  go to state 55


State 99

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   87     | expr DIV . expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 136
    term  go to state 55


State 100

   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   89     | expr "[" . expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   94     | expr "[" . expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 137
    term  go to state 55


State 101

   71 expr_list: . exprs
   72          | . %empty  [error, ")"]
   73 exprs: . expr
   74      | . expr "," exprs
   75      | . expr error exprs
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   90     | expr "(" . expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   95     | expr "(" . expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    error  [reduce using rule 72 (expr_list)]
    ")"    reduce using rule 72 (expr_list)

    expr_list  go to state 138
    exprs      go to state 139
    expr       go to state 140
    term       go to state 55


State 102

    9 identifier_list: IDENT init "," identifier_list .

    $default  reduce using rule 9 (identifier_list)


State 103

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   38 param: IDENT error . type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 141
    standard_type  go to state 11


State 104

   13 type: . standard_type
   14     | . standard_type "[" NUMBER "]"
   15     | . standard_type "[" NUMBER error
   16     | . standard_type "[" error
   17     | . standard_type "[" error "]"
   18     | . standard_type NUMBER "]"
   19     | . standard_type NUMBER error
   20     | . standard_type "]"
   21 standard_type: . INT
   22              | . FLOAT
   37 param: IDENT ":" . type
   39      | IDENT ":" . error
   40      | IDENT ":" . type error

    error  shift, and go to state 142
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 143
    standard_type  go to state 11


State 105

   33 args: "(" params error .

    $default  reduce using rule 33 (args)


State 106

   32 args: "(" params ")" .

    $default  reduce using rule 32 (args)


State 107

   35 params: . param
   36       | . param "," params
   36       | param "," . params
   37 param: . IDENT ":" type
   38      | . IDENT error type
   39      | . IDENT ":" error
   40      | . IDENT ":" type error

    IDENT  shift, and go to state 62

    params  go to state 144
    param   go to state 64


State 108

   29 subprogram_head: FUNCTION error args error type .

    $default  reduce using rule 29 (subprogram_head)


State 109

   27 subprogram_head: FUNCTION error args ":" type .

    $default  reduce using rule 27 (subprogram_head)


State 110

   28 subprogram_head: FUNCTION IDENT args error type .

    $default  reduce using rule 28 (subprogram_head)


State 111

   26 subprogram_head: FUNCTION IDENT args ":" type .

    $default  reduce using rule 26 (subprogram_head)


State 112

   59 if: IF expr . ":" stmt elif else
   60   | IF expr . error stmt elif else
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    error    shift, and go to state 145
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    ":"      shift, and go to state 146


State 113

   67 while: WHILE expr . ":" stmt else
   68      | WHILE expr . error stmt else
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    error    shift, and go to state 147
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    ":"      shift, and go to state 148


State 114

   58 ret_expr: error .  [error, ";"]
  100 term: error .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, "[", "(", ";"]

    error     reduce using rule 58 (ret_expr)
    error     [reduce using rule 100 (term)]
    ";"       reduce using rule 58 (ret_expr)
    ";"       [reduce using rule 100 (term)]
    $default  reduce using rule 100 (term)


State 115

   54 stmt_semi: RETURN ret_expr .

    $default  reduce using rule 54 (stmt_semi)


State 116

   56 ret_expr: expr .  [error, ";"]
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101

    $default  reduce using rule 56 (ret_expr)


State 117

   69 for: FOR expr . IN expr ":" stmt else
   70    | FOR expr . IN expr error stmt else
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 149
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101


State 118

   42 block: BEG declarations stmts error .

    $default  reduce using rule 42 (block)


State 119

   41 block: BEG declarations stmts END .

    $default  reduce using rule 41 (block)


State 120

   43 stmts: stmt stmts .

    $default  reduce using rule 43 (stmts)


State 121

   46 stmt: stmt_semi error .

    $default  reduce using rule 46 (stmt)


State 122

   45 stmt: stmt_semi ";" .

    $default  reduce using rule 45 (stmt)


State 123

   99 term: "(" expr error .

    $default  reduce using rule 99 (term)


State 124

   98 term: "(" expr ")" .

    $default  reduce using rule 98 (term)


State 125

   77 expr: expr . ASS expr
   77     | expr ASS expr .  [error, ASS, ")", "]", ",", ";", ":"]
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101

    $default  reduce using rule 77 (expr)

    룰 77과 토큰 ASS의 충돌이 리듀스로 결정됨 (%left ASS).
    룰 77과 토큰 EQUAL의 충돌이 쉬프트로 결정됨 (ASS < EQUAL).
    룰 77과 토큰 NOTEQU의 충돌이 쉬프트로 결정됨 (ASS < NOTEQU).
    룰 77과 토큰 GREATER의 충돌이 쉬프트로 결정됨 (ASS < GREATER).
    룰 77과 토큰 EQUGRE의 충돌이 쉬프트로 결정됨 (ASS < EQUGRE).
    룰 77과 토큰 LESS의 충돌이 쉬프트로 결정됨 (ASS < LESS).
    룰 77과 토큰 EQULESS의 충돌이 쉬프트로 결정됨 (ASS < EQULESS).
    룰 77과 토큰 IN의 충돌이 쉬프트로 결정됨 (ASS < IN).
    룰 77과 토큰 ADD의 충돌이 쉬프트로 결정됨 (ASS < ADD).
    룰 77과 토큰 SUB의 충돌이 쉬프트로 결정됨 (ASS < SUB).
    룰 77과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ASS < MUL).
    룰 77과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ASS < DIV).
    룰 77과 토큰 "["의 충돌이 쉬프트로 결정됨 (ASS < "[").
    룰 77과 토큰 "("의 충돌이 쉬프트로 결정됨 (ASS < "(").


State 126

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   82     | expr EQUAL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 82 (expr)

    룰 82과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUAL).
    룰 82과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 82과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 82과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 82과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 82과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 82과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 82과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 82과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUAL < ADD).
    룰 82과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUAL < SUB).
    룰 82과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUAL < MUL).
    룰 82과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUAL < DIV).
    룰 82과 토큰 "["의 충돌이 쉬프트로 결정됨 (EQUAL < "[").
    룰 82과 토큰 "("의 충돌이 쉬프트로 결정됨 (EQUAL < "(").


State 127

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   83     | expr NOTEQU expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 83 (expr)

    룰 83과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOTEQU).
    룰 83과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 83과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 83과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 83과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 83과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 83과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 83과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 83과 토큰 ADD의 충돌이 쉬프트로 결정됨 (NOTEQU < ADD).
    룰 83과 토큰 SUB의 충돌이 쉬프트로 결정됨 (NOTEQU < SUB).
    룰 83과 토큰 MUL의 충돌이 쉬프트로 결정됨 (NOTEQU < MUL).
    룰 83과 토큰 DIV의 충돌이 쉬프트로 결정됨 (NOTEQU < DIV).
    룰 83과 토큰 "["의 충돌이 쉬프트로 결정됨 (NOTEQU < "[").
    룰 83과 토큰 "("의 충돌이 쉬프트로 결정됨 (NOTEQU < "(").


State 128

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   78     | expr GREATER expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 78 (expr)

    룰 78과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < GREATER).
    룰 78과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 78과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 78과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 78과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 78과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 78과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 78과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 78과 토큰 ADD의 충돌이 쉬프트로 결정됨 (GREATER < ADD).
    룰 78과 토큰 SUB의 충돌이 쉬프트로 결정됨 (GREATER < SUB).
    룰 78과 토큰 MUL의 충돌이 쉬프트로 결정됨 (GREATER < MUL).
    룰 78과 토큰 DIV의 충돌이 쉬프트로 결정됨 (GREATER < DIV).
    룰 78과 토큰 "["의 충돌이 쉬프트로 결정됨 (GREATER < "[").
    룰 78과 토큰 "("의 충돌이 쉬프트로 결정됨 (GREATER < "(").


State 129

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   79     | expr EQUGRE expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 79 (expr)

    룰 79과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUGRE).
    룰 79과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 79과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 79과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 79과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 79과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 79과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 79과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 79과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUGRE < ADD).
    룰 79과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUGRE < SUB).
    룰 79과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUGRE < MUL).
    룰 79과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUGRE < DIV).
    룰 79과 토큰 "["의 충돌이 쉬프트로 결정됨 (EQUGRE < "[").
    룰 79과 토큰 "("의 충돌이 쉬프트로 결정됨 (EQUGRE < "(").


State 130

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   80     | expr LESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 80 (expr)

    룰 80과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < LESS).
    룰 80과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 80과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 80과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 80과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 80과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 80과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 80과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 80과 토큰 ADD의 충돌이 쉬프트로 결정됨 (LESS < ADD).
    룰 80과 토큰 SUB의 충돌이 쉬프트로 결정됨 (LESS < SUB).
    룰 80과 토큰 MUL의 충돌이 쉬프트로 결정됨 (LESS < MUL).
    룰 80과 토큰 DIV의 충돌이 쉬프트로 결정됨 (LESS < DIV).
    룰 80과 토큰 "["의 충돌이 쉬프트로 결정됨 (LESS < "[").
    룰 80과 토큰 "("의 충돌이 쉬프트로 결정됨 (LESS < "(").


State 131

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   81     | expr EQULESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 81 (expr)

    룰 81과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQULESS).
    룰 81과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 81과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 81과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 81과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 81과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 81과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 81과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 81과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQULESS < ADD).
    룰 81과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQULESS < SUB).
    룰 81과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQULESS < MUL).
    룰 81과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQULESS < DIV).
    룰 81과 토큰 "["의 충돌이 쉬프트로 결정됨 (EQULESS < "[").
    룰 81과 토큰 "("의 충돌이 쉬프트로 결정됨 (EQULESS < "(").


State 132

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   88     | expr IN expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 88 (expr)

    룰 88과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 88과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 88과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 88과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 88과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 88과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 88과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 88과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 88과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 88과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 88과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 88과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).
    룰 88과 토큰 "["의 충돌이 쉬프트로 결정됨 (IN < "[").
    룰 88과 토큰 "("의 충돌이 쉬프트로 결정됨 (IN < "(").


State 133

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   84     | expr ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 84 (expr)

    룰 84과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < ADD).
    룰 84과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < ADD).
    룰 84과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < ADD).
    룰 84과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < ADD).
    룰 84과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < ADD).
    룰 84과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < ADD).
    룰 84과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < ADD).
    룰 84과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < ADD).
    룰 84과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 84과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 84과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ADD < MUL).
    룰 84과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ADD < DIV).
    룰 84과 토큰 "["의 충돌이 쉬프트로 결정됨 (ADD < "[").
    룰 84과 토큰 "("의 충돌이 쉬프트로 결정됨 (ADD < "(").


State 134

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   85     | expr SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99
    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 85 (expr)

    룰 85과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < SUB).
    룰 85과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < SUB).
    룰 85과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < SUB).
    룰 85과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < SUB).
    룰 85과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < SUB).
    룰 85과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < SUB).
    룰 85과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < SUB).
    룰 85과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < SUB).
    룰 85과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 85과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 85과 토큰 MUL의 충돌이 쉬프트로 결정됨 (SUB < MUL).
    룰 85과 토큰 DIV의 충돌이 쉬프트로 결정됨 (SUB < DIV).
    룰 85과 토큰 "["의 충돌이 쉬프트로 결정됨 (SUB < "[").
    룰 85과 토큰 "("의 충돌이 쉬프트로 결정됨 (SUB < "(").


State 135

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   86     | expr MUL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 86 (expr)

    룰 86과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < MUL).
    룰 86과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < MUL).
    룰 86과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < MUL).
    룰 86과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < MUL).
    룰 86과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < MUL).
    룰 86과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < MUL).
    룰 86과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < MUL).
    룰 86과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < MUL).
    룰 86과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < MUL).
    룰 86과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < MUL).
    룰 86과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 86과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).
    룰 86과 토큰 "["의 충돌이 쉬프트로 결정됨 (MUL < "[").
    룰 86과 토큰 "("의 충돌이 쉬프트로 결정됨 (MUL < "(").


State 136

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   87     | expr DIV expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    "["  shift, and go to state 100
    "("  shift, and go to state 101

    $default  reduce using rule 87 (expr)

    룰 87과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < DIV).
    룰 87과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < DIV).
    룰 87과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < DIV).
    룰 87과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < DIV).
    룰 87과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < DIV).
    룰 87과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < DIV).
    룰 87과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < DIV).
    룰 87과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < DIV).
    룰 87과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < DIV).
    룰 87과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < DIV).
    룰 87과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 87과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).
    룰 87과 토큰 "["의 충돌이 쉬프트로 결정됨 (DIV < "[").
    룰 87과 토큰 "("의 충돌이 쉬프트로 결정됨 (DIV < "(").


State 137

   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   89     | expr "[" expr . "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   94     | expr "[" expr . error
   95     | expr . "(" expr_list error

    error    shift, and go to state 150
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    "]"      shift, and go to state 151


State 138

   90 expr: expr "(" expr_list . ")"
   95     | expr "(" expr_list . error

    error  shift, and go to state 152
    ")"    shift, and go to state 153


State 139

   71 expr_list: exprs .

    $default  reduce using rule 71 (expr_list)


State 140

   73 exprs: expr .  [error, ")"]
   74      | expr . "," exprs
   75      | expr . error exprs
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    error    shift, and go to state 154
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    ","      shift, and go to state 155

    error  [reduce using rule 73 (exprs)]
    ")"    reduce using rule 73 (exprs)


State 141

   38 param: IDENT error type .

    $default  reduce using rule 38 (param)


State 142

   39 param: IDENT ":" error .

    $default  reduce using rule 39 (param)


State 143

   37 param: IDENT ":" type .  [error, ")", ","]
   40      | IDENT ":" type . error

    error  shift, and go to state 156

    error  [reduce using rule 37 (param)]
    ")"    reduce using rule 37 (param)
    ","    reduce using rule 37 (param)


State 144

   36 params: param "," params .

    $default  reduce using rule 36 (params)


State 145

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   60   | IF expr error . stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 157
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 146

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   59   | IF expr ":" . stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 158
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 147

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   68      | WHILE expr error . stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 159
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 148

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   67      | WHILE expr ":" . stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 160
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 149

   69 for: FOR expr IN . expr ":" stmt else
   70    | FOR expr IN . expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   88     | expr IN . expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 161
    term  go to state 55


State 150

   94 expr: expr "[" expr error .

    $default  reduce using rule 94 (expr)


State 151

   89 expr: expr "[" expr "]" .

    $default  reduce using rule 89 (expr)


State 152

   95 expr: expr "(" expr_list error .

    $default  reduce using rule 95 (expr)


State 153

   90 expr: expr "(" expr_list ")" .

    $default  reduce using rule 90 (expr)


State 154

   73 exprs: . expr
   74      | . expr "," exprs
   75      | . expr error exprs
   75      | expr error . exprs
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    exprs  go to state 162
    expr   go to state 140
    term   go to state 55


State 155

   73 exprs: . expr
   74      | . expr "," exprs
   74      | expr "," . exprs
   75      | . expr error exprs
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    exprs  go to state 163
    expr   go to state 140
    term   go to state 55


State 156

   40 param: IDENT ":" type error .

    $default  reduce using rule 40 (param)


State 157

   60 if: IF expr error stmt . elif else
   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 164

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 165


State 158

   59 if: IF expr ":" stmt . elif else
   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 164

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 166


State 159

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt
   68 while: WHILE expr error stmt . else

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 168


State 160

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt
   67 while: WHILE expr ":" stmt . else

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 169


State 161

   69 for: FOR expr IN expr . ":" stmt else
   70    | FOR expr IN expr . error stmt else
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   88     | expr IN expr .  [ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN]
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    error  shift, and go to state 170
    ADD    shift, and go to state 96
    SUB    shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    "["    shift, and go to state 100
    "("    shift, and go to state 101
    ":"    shift, and go to state 171

    ASS      reduce using rule 88 (expr)
    EQUAL    reduce using rule 88 (expr)
    NOTEQU   reduce using rule 88 (expr)
    GREATER  reduce using rule 88 (expr)
    EQUGRE   reduce using rule 88 (expr)
    LESS     reduce using rule 88 (expr)
    EQULESS  reduce using rule 88 (expr)
    IN       reduce using rule 88 (expr)

    룰 88과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 88과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 88과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 88과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 88과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 88과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 88과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 88과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 88과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 88과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 88과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 88과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).
    룰 88과 토큰 "["의 충돌이 쉬프트로 결정됨 (IN < "[").
    룰 88과 토큰 "("의 충돌이 쉬프트로 결정됨 (IN < "(").


State 162

   75 exprs: expr error exprs .

    $default  reduce using rule 75 (exprs)


State 163

   74 exprs: expr "," exprs .

    $default  reduce using rule 74 (exprs)


State 164

   61 elif: ELIF . expr ":" stmt elif
   63     | ELIF . expr error stmt elif
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error   shift, and go to state 47
    NUMBER  shift, and go to state 48
    IDENT   shift, and go to state 49
    ADD     shift, and go to state 50
    SUB     shift, and go to state 51
    NOT     shift, and go to state 52
    "("     shift, and go to state 53

    expr  go to state 172
    term  go to state 55


State 165

   60 if: IF expr error stmt elif . else
   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 173


State 166

   59 if: IF expr ":" stmt elif . else
   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 174


State 167

   64 else: ELSE . ":" stmt
   66     | ELSE . error stmt

    error  shift, and go to state 175
    ":"    shift, and go to state 176


State 168

   68 while: WHILE expr error stmt else .

    $default  reduce using rule 68 (while)


State 169

   67 while: WHILE expr ":" stmt else .

    $default  reduce using rule 67 (while)


State 170

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   70    | FOR expr IN expr error . stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 177
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 171

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   69    | FOR expr IN expr ":" . stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 178
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 172

   61 elif: ELIF expr . ":" stmt elif
   63     | ELIF expr . error stmt elif
   77 expr: expr . ASS expr
   78     | expr . GREATER expr
   79     | expr . EQUGRE expr
   80     | expr . LESS expr
   81     | expr . EQULESS expr
   82     | expr . EQUAL expr
   83     | expr . NOTEQU expr
   84     | expr . ADD expr
   85     | expr . SUB expr
   86     | expr . MUL expr
   87     | expr . DIV expr
   88     | expr . IN expr
   89     | expr . "[" expr "]"
   90     | expr . "(" expr_list ")"
   94     | expr . "[" expr error
   95     | expr . "(" expr_list error

    error    shift, and go to state 179
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "["      shift, and go to state 100
    "("      shift, and go to state 101
    ":"      shift, and go to state 180


State 173

   60 if: IF expr error stmt elif else .

    $default  reduce using rule 60 (if)


State 174

   59 if: IF expr ":" stmt elif else .

    $default  reduce using rule 59 (if)


State 175

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   66 else: ELSE error . stmt
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 181
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 176

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   64 else: ELSE ":" . stmt
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 182
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 177

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt
   70 for: FOR expr IN expr error stmt . else

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 183


State 178

   64 else: . ELSE ":" stmt
   65     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   66     | . ELSE error stmt
   69 for: FOR expr IN expr ":" stmt . else

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 65 (else)]
    $default  reduce using rule 65 (else)

    else  go to state 184


State 179

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   63 elif: ELIF expr error . stmt elif
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 185
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 180

   41 block: . BEG declarations stmts END
   42      | . BEG declarations stmts error
   45 stmt: . stmt_semi ";"
   46     | . stmt_semi error
   47     | . block
   48     | . if
   49     | . while
   50     | . for
   51 stmt_semi: . expr
   52          | . BREAK
   53          | . CONTINUE
   54          | . RETURN ret_expr
   55          | . NOP
   59 if: . IF expr ":" stmt elif else
   60   | . IF expr error stmt elif else
   61 elif: ELIF expr ":" . stmt elif
   67 while: . WHILE expr ":" stmt else
   68      | . WHILE expr error stmt else
   69 for: . FOR expr IN expr ":" stmt else
   70    | . FOR expr IN expr error stmt else
   76 expr: . term
   77     | . expr ASS expr
   78     | . expr GREATER expr
   79     | . expr EQUGRE expr
   80     | . expr LESS expr
   81     | . expr EQULESS expr
   82     | . expr EQUAL expr
   83     | . expr NOTEQU expr
   84     | . expr ADD expr
   85     | . expr SUB expr
   86     | . expr MUL expr
   87     | . expr DIV expr
   88     | . expr IN expr
   89     | . expr "[" expr "]"
   90     | . expr "(" expr_list ")"
   91     | . ADD expr
   92     | . SUB expr
   93     | . NOT expr
   94     | . expr "[" expr error
   95     | . expr "(" expr_list error
   96 term: . NUMBER
   97     | . IDENT
   98     | . "(" expr ")"
   99     | . "(" expr error
  100     | . error

    error     shift, and go to state 47
    NUMBER    shift, and go to state 48
    IDENT     shift, and go to state 49
    ADD       shift, and go to state 50
    SUB       shift, and go to state 51
    NOT       shift, and go to state 52
    "("       shift, and go to state 53
    BEG       shift, and go to state 31
    IF        shift, and go to state 69
    CONTINUE  shift, and go to state 70
    NOP       shift, and go to state 71
    WHILE     shift, and go to state 72
    RETURN    shift, and go to state 73
    BREAK     shift, and go to state 74
    FOR       shift, and go to state 75

    block      go to state 76
    stmt       go to state 186
    stmt_semi  go to state 79
    if         go to state 80
    while      go to state 81
    for        go to state 82
    expr       go to state 83
    term       go to state 55


State 181

   66 else: ELSE error stmt .

    $default  reduce using rule 66 (else)


State 182

   64 else: ELSE ":" stmt .

    $default  reduce using rule 64 (else)


State 183

   70 for: FOR expr IN expr error stmt else .

    $default  reduce using rule 70 (for)


State 184

   69 for: FOR expr IN expr ":" stmt else .

    $default  reduce using rule 69 (for)


State 185

   61 elif: . ELIF expr ":" stmt elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   63     | . ELIF expr error stmt elif
   63     | ELIF expr error stmt . elif

    ELIF  shift, and go to state 164

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 187


State 186

   61 elif: . ELIF expr ":" stmt elif
   61     | ELIF expr ":" stmt . elif
   62     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR]
   63     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 164

    ELIF      [reduce using rule 62 (elif)]
    $default  reduce using rule 62 (elif)

    elif  go to state 188


State 187

   63 elif: ELIF expr error stmt elif .

    $default  reduce using rule 63 (elif)


State 188

   61 elif: ELIF expr ":" stmt elif .

    $default  reduce using rule 61 (elif)
