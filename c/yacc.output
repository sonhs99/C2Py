State 29 충돌: 2 쉬프트/리듀스
State 33 충돌: 2 쉬프트/리듀스
State 34 충돌: 2 쉬프트/리듀스
State 118 충돌: 1 쉬프트/리듀스
State 161 충돌: 1 쉬프트/리듀스
State 162 충돌: 1 쉬프트/리듀스
State 163 충돌: 1 쉬프트/리듀스
State 164 충돌: 1 쉬프트/리듀스
State 171 충돌: 1 쉬프트/리듀스
State 172 충돌: 1 쉬프트/리듀스
State 183 충돌: 1 쉬프트/리듀스
State 184 충돌: 1 쉬프트/리듀스
State 191 충돌: 1 쉬프트/리듀스
State 192 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: MAINPROG IDENT ";" declarations subprograms
    2        | MAINPROG error ";" declarations subprograms
    3        | MAINPROG IDENT error declarations subprograms
    4        | MAINPROG error declarations subprograms

    5 declarations: type identifier_list ";" declarations
    6             | type identifier_list error declarations
    7             | %empty

    8 identifier_list: IDENT init
    9                | IDENT init "," identifier_list
   10                | error

   11 init: ASS expr
   12     | %empty
   13     | ASS error

   14 type: standard_type
   15     | standard_type "[" NUMBER "]"
   16     | standard_type "[" NUMBER error

   17 standard_type: INT
   18              | FLOAT

   19 subprograms: subprogram subprograms
   20            | %empty

   21 subprogram: subprogram_head block

   22 subprogram_head: FUNCTION IDENT args ":" standard_type
   23                | FUNCTION error args ":" standard_type
   24                | FUNCTION IDENT args
   25                | FUNCTION error args

   26 args: "(" params ")"
   27     | "(" params error
   28     | %empty

   29 params: identifier_list ":" type
   30       | identifier_list error type
   31       | identifier_list ":" type ";" params
   32       | identifier_list error type ";" params

   33 block: BEG declarations stmts END
   34      | BEG declarations stmts error

   35 stmts: stmt stmts
   36      | %empty

   37 stmt: stmt_semi ";"
   38     | stmt_semi error
   39     | block
   40     | if
   41     | while
   42     | for

   43 stmt_semi: expr
   44          | BREAK
   45          | CONTINUE
   46          | RETURN expr
   47          | NOP

   48 if: IF expr ":" stmt elif else
   49   | IF expr error stmt elif else

   50 elif: ELIF expr ":" stmt elif
   51     | %empty
   52     | ELIF expr error stmt elif

   53 else: ELSE ":" stmt
   54     | %empty
   55     | ELSE error stmt

   56 while: WHILE expr ":" stmt else
   57      | WHILE expr error stmt else

   58 for: FOR expr IN expr ":" stmt else
   59    | FOR expr IN expr error stmt else

   60 variable: IDENT
   61         | IDENT "[" expr "]"
   62         | IDENT "[" expr error

   63 procedure: IDENT "(" expr_list ")"
   64          | IDENT "(" expr_list error

   65 expr_list: exprs
   66          | %empty

   67 exprs: expr
   68      | expr "," exprs
   69      | expr error exprs

   70 expr: term
   71     | expr ASS expr
   72     | expr GREATER expr
   73     | expr EQUGRE expr
   74     | expr LESS expr
   75     | expr EQULESS expr
   76     | expr EQUAL expr
   77     | expr NOTEQU expr
   78     | expr ADD expr
   79     | expr SUB expr
   80     | expr MUL expr
   81     | expr DIV expr
   82     | expr IN expr
   83     | ADD expr
   84     | SUB expr
   85     | NOT expr
   86     | expr ASS error
   87     | expr GREATER error
   88     | expr EQUGRE error
   89     | expr LESS error
   90     | expr EQULESS error
   91     | expr EQUAL error
   92     | expr NOTEQU error
   93     | expr ADD error
   94     | expr SUB error
   95     | expr MUL error
   96     | expr DIV error
   97     | expr IN error
   98     | ADD error
   99     | SUB error
  100     | NOT error

  101 term: NUMBER
  102     | variable
  103     | procedure
  104     | "(" expr ")"
  105     | "(" expr error
  106     | type term
  107     | type


Terminals, with rules where they appear

$end (0) 0
error (256) 2 3 4 6 10 13 16 23 25 27 30 32 34 38 49 52 55 57 59 62
    64 69 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 105
NUMBER (258) 15 16 101
IDENT (259) 1 3 8 9 22 24 60 61 62 63 64
ASS (260) 11 13 71 86
EQUAL (261) 76 91
NOTEQU (262) 77 92
GREATER (263) 72 87
EQUGRE (264) 73 88
LESS (265) 74 89
EQULESS (266) 75 90
IN (267) 58 59 82 97
ADD (268) 78 83 93 98
SUB (269) 79 84 94 99
MUL (270) 80 95
DIV (271) 81 96
UMINUS (272)
UPLUS (273)
NOT (274) 85 100
"(" (275) 26 27 63 64 104 105
")" (276) 26 63 104
"[" (277) 15 16 61 62
"]" (278) 15 61
"," (279) 9 68
";" (280) 1 2 5 31 32 37
":" (281) 22 23 29 31 48 50 53 56 58
MAINPROG (282) 1 2 3 4
FUNCTION (283) 22 23 24 25
BEG (284) 33 34
END (285) 33
IF (286) 48 49
CONTINUE (287) 45
ELIF (288) 50 52
ELSE (289) 53 55
NOP (290) 47
WHILE (291) 56 57
RETURN (292) 46
BREAK (293) 44
FOR (294) 58 59
INT (295) 17
FLOAT (296) 18


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1 2 3 4, on right: 0
declarations (44)
    on left: 5 6 7, on right: 1 2 3 4 5 6 33 34
identifier_list (45)
    on left: 8 9 10, on right: 5 6 9 29 30 31 32
init (46)
    on left: 11 12 13, on right: 8 9
type (47)
    on left: 14 15 16, on right: 5 6 29 30 31 32 106 107
standard_type (48)
    on left: 17 18, on right: 14 15 16 22 23
subprograms (49)
    on left: 19 20, on right: 1 2 3 4 19
subprogram (50)
    on left: 21, on right: 19
subprogram_head (51)
    on left: 22 23 24 25, on right: 21
args (52)
    on left: 26 27 28, on right: 22 23 24 25
params (53)
    on left: 29 30 31 32, on right: 26 27 31 32
block (54)
    on left: 33 34, on right: 21 39
stmts (55)
    on left: 35 36, on right: 33 34 35
stmt (56)
    on left: 37 38 39 40 41 42, on right: 35 48 49 50 52 53 55 56 57
    58 59
stmt_semi (57)
    on left: 43 44 45 46 47, on right: 37 38
if (58)
    on left: 48 49, on right: 40
elif (59)
    on left: 50 51 52, on right: 48 49 50 52
else (60)
    on left: 53 54 55, on right: 48 49 56 57 58 59
while (61)
    on left: 56 57, on right: 41
for (62)
    on left: 58 59, on right: 42
variable (63)
    on left: 60 61 62, on right: 102
procedure (64)
    on left: 63 64, on right: 103
expr_list (65)
    on left: 65 66, on right: 63 64
exprs (66)
    on left: 67 68 69, on right: 65 68 69
expr (67)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96 97 98 99 100, on right: 11 43 46 48
    49 50 52 56 57 58 59 61 62 67 68 69 71 72 73 74 75 76 77 78 79
    80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 104 105
term (68)
    on left: 101 102 103 104 105 106 107, on right: 70 106


State 0

    0 $accept: . program $end
    1 program: . MAINPROG IDENT ";" declarations subprograms
    2        | . MAINPROG error ";" declarations subprograms
    3        | . MAINPROG IDENT error declarations subprograms
    4        | . MAINPROG error declarations subprograms

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . IDENT ";" declarations subprograms
    2        | MAINPROG . error ";" declarations subprograms
    3        | MAINPROG . IDENT error declarations subprograms
    4        | MAINPROG . error declarations subprograms

    error  shift, and go to state 3
    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: MAINPROG error . ";" declarations subprograms
    4        | MAINPROG error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    ";"    shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 4

    1 program: MAINPROG IDENT . ";" declarations subprograms
    3        | MAINPROG IDENT . error declarations subprograms

    error  shift, and go to state 12
    ";"    shift, and go to state 13


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: MAINPROG error ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 14
    type           go to state 10
    standard_type  go to state 11


State 7

   17 standard_type: INT .

    $default  reduce using rule 17 (standard_type)


State 8

   18 standard_type: FLOAT .

    $default  reduce using rule 18 (standard_type)


State 9

    4 program: MAINPROG error declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 16
    subprogram       go to state 17
    subprogram_head  go to state 18


State 10

    5 declarations: type . identifier_list ";" declarations
    6             | type . identifier_list error declarations
    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 21


State 11

   14 type: standard_type .  [error, NUMBER, IDENT, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, "(", ")", "]", ",", ";", ":", INT, FLOAT]
   15     | standard_type . "[" NUMBER "]"
   16     | standard_type . "[" NUMBER error

    "["  shift, and go to state 22

    $default  reduce using rule 14 (type)


State 12

    3 program: MAINPROG IDENT error . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 23
    type           go to state 10
    standard_type  go to state 11


State 13

    1 program: MAINPROG IDENT ";" . declarations subprograms
    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, FUNCTION]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    $default  reduce using rule 7 (declarations)

    declarations   go to state 24
    type           go to state 10
    standard_type  go to state 11


State 14

    2 program: MAINPROG error ";" declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 25
    subprogram       go to state 17
    subprogram_head  go to state 18


State 15

   22 subprogram_head: FUNCTION . IDENT args ":" standard_type
   23                | FUNCTION . error args ":" standard_type
   24                | FUNCTION . IDENT args
   25                | FUNCTION . error args

    error  shift, and go to state 26
    IDENT  shift, and go to state 27


State 16

    4 program: MAINPROG error declarations subprograms .

    $default  reduce using rule 4 (program)


State 17

   19 subprograms: . subprogram subprograms
   19            | subprogram . subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 28
    subprogram       go to state 17
    subprogram_head  go to state 18


State 18

   21 subprogram: subprogram_head . block
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error

    BEG  shift, and go to state 29

    block  go to state 30


State 19

   10 identifier_list: error .

    $default  reduce using rule 10 (identifier_list)


State 20

    8 identifier_list: IDENT . init
    9                | IDENT . init "," identifier_list
   11 init: . ASS expr
   12     | . %empty  [error, ",", ";", ":"]
   13     | . ASS error

    ASS  shift, and go to state 31

    $default  reduce using rule 12 (init)

    init  go to state 32


State 21

    5 declarations: type identifier_list . ";" declarations
    6             | type identifier_list . error declarations

    error  shift, and go to state 33
    ";"    shift, and go to state 34


State 22

   15 type: standard_type "[" . NUMBER "]"
   16     | standard_type "[" . NUMBER error

    NUMBER  shift, and go to state 35


State 23

    3 program: MAINPROG IDENT error declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 36
    subprogram       go to state 17
    subprogram_head  go to state 18


State 24

    1 program: MAINPROG IDENT ";" declarations . subprograms
   19 subprograms: . subprogram subprograms
   20            | . %empty  [$end]
   21 subprogram: . subprogram_head block
   22 subprogram_head: . FUNCTION IDENT args ":" standard_type
   23                | . FUNCTION error args ":" standard_type
   24                | . FUNCTION IDENT args
   25                | . FUNCTION error args

    FUNCTION  shift, and go to state 15

    $default  reduce using rule 20 (subprograms)

    subprograms      go to state 37
    subprogram       go to state 17
    subprogram_head  go to state 18


State 25

    2 program: MAINPROG error ";" declarations subprograms .

    $default  reduce using rule 2 (program)


State 26

   23 subprogram_head: FUNCTION error . args ":" standard_type
   25                | FUNCTION error . args
   26 args: . "(" params ")"
   27     | . "(" params error
   28     | . %empty  [":", BEG]

    "("  shift, and go to state 38

    $default  reduce using rule 28 (args)

    args  go to state 39


State 27

   22 subprogram_head: FUNCTION IDENT . args ":" standard_type
   24                | FUNCTION IDENT . args
   26 args: . "(" params ")"
   27     | . "(" params error
   28     | . %empty  [":", BEG]

    "("  shift, and go to state 38

    $default  reduce using rule 28 (args)

    args  go to state 40


State 28

   19 subprograms: subprogram subprograms .

    $default  reduce using rule 19 (subprograms)


State 29

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: BEG . declarations stmts END
   34      | BEG . declarations stmts error

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 41
    type           go to state 10
    standard_type  go to state 11


State 30

   21 subprogram: subprogram_head block .

    $default  reduce using rule 21 (subprogram)


State 31

   11 init: ASS . expr
   13     | ASS . error
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 42
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 52
    term           go to state 53


State 32

    8 identifier_list: IDENT init .  [error, ";", ":"]
    9                | IDENT init . "," identifier_list

    ","  shift, and go to state 54

    $default  reduce using rule 8 (identifier_list)


State 33

    5 declarations: . type identifier_list ";" declarations
    6             | . type identifier_list error declarations
    6             | type identifier_list error . declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 55
    type           go to state 10
    standard_type  go to state 11


State 34

    5 declarations: . type identifier_list ";" declarations
    5             | type identifier_list ";" . declarations
    6             | . type identifier_list error declarations
    7             | . %empty  [$end, error, NUMBER, IDENT, ADD, SUB, NOT, "(", FUNCTION, BEG, END, IF, CONTINUE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    INT       [reduce using rule 7 (declarations)]
    FLOAT     [reduce using rule 7 (declarations)]
    $default  reduce using rule 7 (declarations)

    declarations   go to state 56
    type           go to state 10
    standard_type  go to state 11


State 35

   15 type: standard_type "[" NUMBER . "]"
   16     | standard_type "[" NUMBER . error

    error  shift, and go to state 57
    "]"    shift, and go to state 58


State 36

    3 program: MAINPROG IDENT error declarations subprograms .

    $default  reduce using rule 3 (program)


State 37

    1 program: MAINPROG IDENT ";" declarations subprograms .

    $default  reduce using rule 1 (program)


State 38

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   26 args: "(" . params ")"
   27     | "(" . params error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   32       | . identifier_list error type ";" params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 60


State 39

   23 subprogram_head: FUNCTION error args . ":" standard_type
   25                | FUNCTION error args .  [BEG]

    ":"  shift, and go to state 61

    $default  reduce using rule 25 (subprogram_head)


State 40

   22 subprogram_head: FUNCTION IDENT args . ":" standard_type
   24                | FUNCTION IDENT args .  [BEG]

    ":"  shift, and go to state 62

    $default  reduce using rule 24 (subprogram_head)


State 41

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   33      | BEG declarations . stmts END
   34      | . BEG declarations stmts error
   34      | BEG declarations . stmts error
   35 stmts: . stmt stmts
   36      | . %empty  [error, END]
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    $default  reduce using rule 36 (stmts)

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmts          go to state 71
    stmt           go to state 72
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 42

   13 init: ASS error .

    $default  reduce using rule 13 (init)


State 43

  101 term: NUMBER .

    $default  reduce using rule 101 (term)


State 44

   60 variable: IDENT .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   61         | IDENT . "[" expr "]"
   62         | IDENT . "[" expr error
   63 procedure: IDENT . "(" expr_list ")"
   64          | IDENT . "(" expr_list error

    "("  shift, and go to state 78
    "["  shift, and go to state 79

    $default  reduce using rule 60 (variable)


State 45

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   83     | ADD . expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   98     | ADD . error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 80
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 81
    term           go to state 53


State 46

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   84     | SUB . expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
   99     | SUB . error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 82
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 83
    term           go to state 53


State 47

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   85     | NOT . expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  100     | NOT . error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 84
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 85
    term           go to state 53


State 48

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  104     | "(" . expr ")"
  105     | . "(" expr error
  105     | "(" . expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 86
    term           go to state 53


State 49

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  106     | type . term
  107     | . type
  107     | type .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 107 (term)

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    term           go to state 87


State 50

  102 term: variable .

    $default  reduce using rule 102 (term)


State 51

  103 term: procedure .

    $default  reduce using rule 103 (term)


State 52

   11 init: ASS expr .  [error, ",", ";", ":"]
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99

    $default  reduce using rule 11 (init)


State 53

   70 expr: term .

    $default  reduce using rule 70 (expr)


State 54

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
    9                | IDENT init "," . identifier_list
   10                | . error

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 100


State 55

    6 declarations: type identifier_list error declarations .

    $default  reduce using rule 6 (declarations)


State 56

    5 declarations: type identifier_list ";" declarations .

    $default  reduce using rule 5 (declarations)


State 57

   16 type: standard_type "[" NUMBER error .

    $default  reduce using rule 16 (type)


State 58

   15 type: standard_type "[" NUMBER "]" .

    $default  reduce using rule 15 (type)


State 59

   29 params: identifier_list . ":" type
   30       | identifier_list . error type
   31       | identifier_list . ":" type ";" params
   32       | identifier_list . error type ";" params

    error  shift, and go to state 101
    ":"    shift, and go to state 102


State 60

   26 args: "(" params . ")"
   27     | "(" params . error

    error  shift, and go to state 103
    ")"    shift, and go to state 104


State 61

   17 standard_type: . INT
   18              | . FLOAT
   23 subprogram_head: FUNCTION error args ":" . standard_type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    standard_type  go to state 105


State 62

   17 standard_type: . INT
   18              | . FLOAT
   22 subprogram_head: FUNCTION IDENT args ":" . standard_type

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    standard_type  go to state 106


State 63

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   48 if: IF . expr ":" stmt elif else
   49   | IF . expr error stmt elif else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 107
    term           go to state 53


State 64

   45 stmt_semi: CONTINUE .

    $default  reduce using rule 45 (stmt_semi)


State 65

   47 stmt_semi: NOP .

    $default  reduce using rule 47 (stmt_semi)


State 66

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   56 while: WHILE . expr ":" stmt else
   57      | WHILE . expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 108
    term           go to state 53


State 67

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   46 stmt_semi: RETURN . expr
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 109
    term           go to state 53


State 68

   44 stmt_semi: BREAK .

    $default  reduce using rule 44 (stmt_semi)


State 69

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 for: FOR . expr IN expr ":" stmt else
   59    | FOR . expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 110
    term           go to state 53


State 70

   39 stmt: block .

    $default  reduce using rule 39 (stmt)


State 71

   33 block: BEG declarations stmts . END
   34      | BEG declarations stmts . error

    error  shift, and go to state 111
    END    shift, and go to state 112


State 72

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   35 stmts: . stmt stmts
   35      | stmt . stmts
   36      | . %empty  [error, END]
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    $default  reduce using rule 36 (stmts)

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmts          go to state 113
    stmt           go to state 72
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 73

   37 stmt: stmt_semi . ";"
   38     | stmt_semi . error

    error  shift, and go to state 114
    ";"    shift, and go to state 115


State 74

   40 stmt: if .

    $default  reduce using rule 40 (stmt)


State 75

   41 stmt: while .

    $default  reduce using rule 41 (stmt)


State 76

   42 stmt: for .

    $default  reduce using rule 42 (stmt)


State 77

   43 stmt_semi: expr .  [error, ";"]
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99

    $default  reduce using rule 43 (stmt_semi)


State 78

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   63          | IDENT "(" . expr_list ")"
   64          | . IDENT "(" expr_list error
   64          | IDENT "(" . expr_list error
   65 expr_list: . exprs
   66          | . %empty  [error, ")"]
   67 exprs: . expr
   68      | . expr "," exprs
   69      | . expr error exprs
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    $default  reduce using rule 66 (expr_list)

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr_list      go to state 116
    exprs          go to state 117
    expr           go to state 118
    term           go to state 53


State 79

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   61         | IDENT "[" . expr "]"
   62         | . IDENT "[" expr error
   62         | IDENT "[" . expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 119
    term           go to state 53


State 80

   98 expr: ADD error .

    $default  reduce using rule 98 (expr)


State 81

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   83     | ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    $default  reduce using rule 83 (expr)

    룰 83과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UPLUS).
    룰 83과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UPLUS).
    룰 83과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UPLUS).
    룰 83과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UPLUS).
    룰 83과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UPLUS).
    룰 83과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UPLUS).
    룰 83과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UPLUS).
    룰 83과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UPLUS).
    룰 83과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UPLUS).
    룰 83과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UPLUS).
    룰 83과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UPLUS).
    룰 83과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UPLUS).


State 82

   99 expr: SUB error .

    $default  reduce using rule 99 (expr)


State 83

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   84     | SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    $default  reduce using rule 84 (expr)

    룰 84과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < UMINUS).
    룰 84과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < UMINUS).
    룰 84과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < UMINUS).
    룰 84과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < UMINUS).
    룰 84과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < UMINUS).
    룰 84과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < UMINUS).
    룰 84과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < UMINUS).
    룰 84과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < UMINUS).
    룰 84과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < UMINUS).
    룰 84과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < UMINUS).
    룰 84과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < UMINUS).
    룰 84과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < UMINUS).


State 84

  100 expr: NOT error .

    $default  reduce using rule 100 (expr)


State 85

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   85     | NOT expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    $default  reduce using rule 85 (expr)

    룰 85과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOT).
    룰 85과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < NOT).
    룰 85과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < NOT).
    룰 85과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < NOT).
    룰 85과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < NOT).
    룰 85과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < NOT).
    룰 85과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < NOT).
    룰 85과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < NOT).
    룰 85과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < NOT).
    룰 85과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < NOT).
    룰 85과 토큰 MUL의 충돌이 리듀스로 결정됨 (MUL < NOT).
    룰 85과 토큰 DIV의 충돌이 리듀스로 결정됨 (DIV < NOT).


State 86

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error
  104 term: "(" expr . ")"
  105     | "(" expr . error

    error    shift, and go to state 120
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    ")"      shift, and go to state 121


State 87

  106 term: type term .

    $default  reduce using rule 106 (term)


State 88

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   71     | expr ASS . expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   86     | expr ASS . error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 122
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 123
    term           go to state 53


State 89

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   76     | expr EQUAL . expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   91     | expr EQUAL . error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 124
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 125
    term           go to state 53


State 90

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   77     | expr NOTEQU . expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   92     | expr NOTEQU . error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 126
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 127
    term           go to state 53


State 91

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   72     | expr GREATER . expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   87     | expr GREATER . error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 128
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 129
    term           go to state 53


State 92

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   73     | expr EQUGRE . expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   88     | expr EQUGRE . error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 130
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 131
    term           go to state 53


State 93

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   74     | expr LESS . expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   89     | expr LESS . error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 132
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 133
    term           go to state 53


State 94

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   75     | expr EQULESS . expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   90     | expr EQULESS . error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 134
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 135
    term           go to state 53


State 95

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   82     | expr IN . expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   97     | expr IN . error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 136
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 137
    term           go to state 53


State 96

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   78     | expr ADD . expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   93     | expr ADD . error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 138
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 139
    term           go to state 53


State 97

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   79     | expr SUB . expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   94     | expr SUB . error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 140
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 141
    term           go to state 53


State 98

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   80     | expr MUL . expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   95     | expr MUL . error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 142
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 143
    term           go to state 53


State 99

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   81     | expr DIV . expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   96     | expr DIV . error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 144
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 145
    term           go to state 53


State 100

    9 identifier_list: IDENT init "," identifier_list .

    $default  reduce using rule 9 (identifier_list)


State 101

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   30 params: identifier_list error . type
   32       | identifier_list error . type ";" params

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 146
    standard_type  go to state 11


State 102

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   29 params: identifier_list ":" . type
   31       | identifier_list ":" . type ";" params

    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8

    type           go to state 147
    standard_type  go to state 11


State 103

   27 args: "(" params error .

    $default  reduce using rule 27 (args)


State 104

   26 args: "(" params ")" .

    $default  reduce using rule 26 (args)


State 105

   23 subprogram_head: FUNCTION error args ":" standard_type .

    $default  reduce using rule 23 (subprogram_head)


State 106

   22 subprogram_head: FUNCTION IDENT args ":" standard_type .

    $default  reduce using rule 22 (subprogram_head)


State 107

   48 if: IF expr . ":" stmt elif else
   49   | IF expr . error stmt elif else
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error    shift, and go to state 148
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    ":"      shift, and go to state 149


State 108

   56 while: WHILE expr . ":" stmt else
   57      | WHILE expr . error stmt else
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error    shift, and go to state 150
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    ":"      shift, and go to state 151


State 109

   46 stmt_semi: RETURN expr .  [error, ";"]
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99

    $default  reduce using rule 46 (stmt_semi)


State 110

   58 for: FOR expr . IN expr ":" stmt else
   59    | FOR expr . IN expr error stmt else
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 152
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99


State 111

   34 block: BEG declarations stmts error .

    $default  reduce using rule 34 (block)


State 112

   33 block: BEG declarations stmts END .

    $default  reduce using rule 33 (block)


State 113

   35 stmts: stmt stmts .

    $default  reduce using rule 35 (stmts)


State 114

   38 stmt: stmt_semi error .

    $default  reduce using rule 38 (stmt)


State 115

   37 stmt: stmt_semi ";" .

    $default  reduce using rule 37 (stmt)


State 116

   63 procedure: IDENT "(" expr_list . ")"
   64          | IDENT "(" expr_list . error

    error  shift, and go to state 153
    ")"    shift, and go to state 154


State 117

   65 expr_list: exprs .

    $default  reduce using rule 65 (expr_list)


State 118

   67 exprs: expr .  [error, ")"]
   68      | expr . "," exprs
   69      | expr . error exprs
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error    shift, and go to state 155
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    ","      shift, and go to state 156

    error  [reduce using rule 67 (exprs)]
    ")"    reduce using rule 67 (exprs)


State 119

   61 variable: IDENT "[" expr . "]"
   62         | IDENT "[" expr . error
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error    shift, and go to state 157
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    "]"      shift, and go to state 158


State 120

  105 term: "(" expr error .

    $default  reduce using rule 105 (term)


State 121

  104 term: "(" expr ")" .

    $default  reduce using rule 104 (term)


State 122

   86 expr: expr ASS error .

    $default  reduce using rule 86 (expr)


State 123

   71 expr: expr . ASS expr
   71     | expr ASS expr .  [error, ASS, ")", "]", ",", ";", ":"]
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99

    $default  reduce using rule 71 (expr)

    룰 71과 토큰 ASS의 충돌이 리듀스로 결정됨 (%left ASS).
    룰 71과 토큰 EQUAL의 충돌이 쉬프트로 결정됨 (ASS < EQUAL).
    룰 71과 토큰 NOTEQU의 충돌이 쉬프트로 결정됨 (ASS < NOTEQU).
    룰 71과 토큰 GREATER의 충돌이 쉬프트로 결정됨 (ASS < GREATER).
    룰 71과 토큰 EQUGRE의 충돌이 쉬프트로 결정됨 (ASS < EQUGRE).
    룰 71과 토큰 LESS의 충돌이 쉬프트로 결정됨 (ASS < LESS).
    룰 71과 토큰 EQULESS의 충돌이 쉬프트로 결정됨 (ASS < EQULESS).
    룰 71과 토큰 IN의 충돌이 쉬프트로 결정됨 (ASS < IN).
    룰 71과 토큰 ADD의 충돌이 쉬프트로 결정됨 (ASS < ADD).
    룰 71과 토큰 SUB의 충돌이 쉬프트로 결정됨 (ASS < SUB).
    룰 71과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ASS < MUL).
    룰 71과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ASS < DIV).


State 124

   91 expr: expr EQUAL error .

    $default  reduce using rule 91 (expr)


State 125

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   76     | expr EQUAL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 76 (expr)

    룰 76과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUAL).
    룰 76과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 76과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 76과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 76과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 76과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 76과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 76과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 76과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUAL < ADD).
    룰 76과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUAL < SUB).
    룰 76과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUAL < MUL).
    룰 76과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUAL < DIV).


State 126

   92 expr: expr NOTEQU error .

    $default  reduce using rule 92 (expr)


State 127

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   77     | expr NOTEQU expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 77 (expr)

    룰 77과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < NOTEQU).
    룰 77과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 77과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 77과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 77과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 77과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 77과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 77과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 77과 토큰 ADD의 충돌이 쉬프트로 결정됨 (NOTEQU < ADD).
    룰 77과 토큰 SUB의 충돌이 쉬프트로 결정됨 (NOTEQU < SUB).
    룰 77과 토큰 MUL의 충돌이 쉬프트로 결정됨 (NOTEQU < MUL).
    룰 77과 토큰 DIV의 충돌이 쉬프트로 결정됨 (NOTEQU < DIV).


State 128

   87 expr: expr GREATER error .

    $default  reduce using rule 87 (expr)


State 129

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   72     | expr GREATER expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 72 (expr)

    룰 72과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < GREATER).
    룰 72과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 72과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 72과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 72과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 72과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 72과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 72과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 72과 토큰 ADD의 충돌이 쉬프트로 결정됨 (GREATER < ADD).
    룰 72과 토큰 SUB의 충돌이 쉬프트로 결정됨 (GREATER < SUB).
    룰 72과 토큰 MUL의 충돌이 쉬프트로 결정됨 (GREATER < MUL).
    룰 72과 토큰 DIV의 충돌이 쉬프트로 결정됨 (GREATER < DIV).


State 130

   88 expr: expr EQUGRE error .

    $default  reduce using rule 88 (expr)


State 131

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   73     | expr EQUGRE expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 73 (expr)

    룰 73과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQUGRE).
    룰 73과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 73과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 73과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 73과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 73과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 73과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 73과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 73과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQUGRE < ADD).
    룰 73과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQUGRE < SUB).
    룰 73과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQUGRE < MUL).
    룰 73과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQUGRE < DIV).


State 132

   89 expr: expr LESS error .

    $default  reduce using rule 89 (expr)


State 133

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   74     | expr LESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 74 (expr)

    룰 74과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < LESS).
    룰 74과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 74과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 74과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 74과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 74과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 74과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 74과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 74과 토큰 ADD의 충돌이 쉬프트로 결정됨 (LESS < ADD).
    룰 74과 토큰 SUB의 충돌이 쉬프트로 결정됨 (LESS < SUB).
    룰 74과 토큰 MUL의 충돌이 쉬프트로 결정됨 (LESS < MUL).
    룰 74과 토큰 DIV의 충돌이 쉬프트로 결정됨 (LESS < DIV).


State 134

   90 expr: expr EQULESS error .

    $default  reduce using rule 90 (expr)


State 135

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   75     | expr EQULESS expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 75 (expr)

    룰 75과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < EQULESS).
    룰 75과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 75과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 75과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 75과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 75과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 75과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 75과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 75과 토큰 ADD의 충돌이 쉬프트로 결정됨 (EQULESS < ADD).
    룰 75과 토큰 SUB의 충돌이 쉬프트로 결정됨 (EQULESS < SUB).
    룰 75과 토큰 MUL의 충돌이 쉬프트로 결정됨 (EQULESS < MUL).
    룰 75과 토큰 DIV의 충돌이 쉬프트로 결정됨 (EQULESS < DIV).


State 136

   97 expr: expr IN error .

    $default  reduce using rule 97 (expr)


State 137

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   82     | expr IN expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ")", "]", ",", ";", ":"]
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    ADD  shift, and go to state 96
    SUB  shift, and go to state 97
    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 82 (expr)

    룰 82과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 82과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 82과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 82과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 82과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 82과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 82과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 82과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 82과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 82과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 82과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 82과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 138

   93 expr: expr ADD error .

    $default  reduce using rule 93 (expr)


State 139

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   78     | expr ADD expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 78 (expr)

    룰 78과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < ADD).
    룰 78과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < ADD).
    룰 78과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < ADD).
    룰 78과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < ADD).
    룰 78과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < ADD).
    룰 78과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < ADD).
    룰 78과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < ADD).
    룰 78과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < ADD).
    룰 78과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 78과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 78과 토큰 MUL의 충돌이 쉬프트로 결정됨 (ADD < MUL).
    룰 78과 토큰 DIV의 충돌이 쉬프트로 결정됨 (ADD < DIV).


State 140

   94 expr: expr SUB error .

    $default  reduce using rule 94 (expr)


State 141

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   79     | expr SUB expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, ")", "]", ",", ";", ":"]
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    MUL  shift, and go to state 98
    DIV  shift, and go to state 99

    $default  reduce using rule 79 (expr)

    룰 79과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < SUB).
    룰 79과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < SUB).
    룰 79과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < SUB).
    룰 79과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < SUB).
    룰 79과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < SUB).
    룰 79과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < SUB).
    룰 79과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < SUB).
    룰 79과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < SUB).
    룰 79과 토큰 ADD의 충돌이 리듀스로 결정됨 (%left ADD).
    룰 79과 토큰 SUB의 충돌이 리듀스로 결정됨 (%left SUB).
    룰 79과 토큰 MUL의 충돌이 쉬프트로 결정됨 (SUB < MUL).
    룰 79과 토큰 DIV의 충돌이 쉬프트로 결정됨 (SUB < DIV).


State 142

   95 expr: expr MUL error .

    $default  reduce using rule 95 (expr)


State 143

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   80     | expr MUL expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    $default  reduce using rule 80 (expr)

    룰 80과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < MUL).
    룰 80과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < MUL).
    룰 80과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < MUL).
    룰 80과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < MUL).
    룰 80과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < MUL).
    룰 80과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < MUL).
    룰 80과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < MUL).
    룰 80과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < MUL).
    룰 80과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < MUL).
    룰 80과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < MUL).
    룰 80과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 80과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 144

   96 expr: expr DIV error .

    $default  reduce using rule 96 (expr)


State 145

   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   81     | expr DIV expr .  [error, ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN, ADD, SUB, MUL, DIV, ")", "]", ",", ";", ":"]
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    $default  reduce using rule 81 (expr)

    룰 81과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < DIV).
    룰 81과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (EQUAL < DIV).
    룰 81과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (NOTEQU < DIV).
    룰 81과 토큰 GREATER의 충돌이 리듀스로 결정됨 (GREATER < DIV).
    룰 81과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (EQUGRE < DIV).
    룰 81과 토큰 LESS의 충돌이 리듀스로 결정됨 (LESS < DIV).
    룰 81과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (EQULESS < DIV).
    룰 81과 토큰 IN의 충돌이 리듀스로 결정됨 (IN < DIV).
    룰 81과 토큰 ADD의 충돌이 리듀스로 결정됨 (ADD < DIV).
    룰 81과 토큰 SUB의 충돌이 리듀스로 결정됨 (SUB < DIV).
    룰 81과 토큰 MUL의 충돌이 리듀스로 결정됨 (%left MUL).
    룰 81과 토큰 DIV의 충돌이 리듀스로 결정됨 (%left DIV).


State 146

   30 params: identifier_list error type .  [error, ")"]
   32       | identifier_list error type . ";" params

    ";"  shift, and go to state 159

    $default  reduce using rule 30 (params)


State 147

   29 params: identifier_list ":" type .  [error, ")"]
   31       | identifier_list ":" type . ";" params

    ";"  shift, and go to state 160

    $default  reduce using rule 29 (params)


State 148

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   49   | IF expr error . stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 161
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 149

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   48   | IF expr ":" . stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 162
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 150

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   57      | WHILE expr error . stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 163
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 151

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   56      | WHILE expr ":" . stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 164
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 152

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   58 for: FOR expr IN . expr ":" stmt else
   59    | FOR expr IN . expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   82     | expr IN . expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   97     | expr IN . error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    error   shift, and go to state 136
    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 165
    term           go to state 53


State 153

   64 procedure: IDENT "(" expr_list error .

    $default  reduce using rule 64 (procedure)


State 154

   63 procedure: IDENT "(" expr_list ")" .

    $default  reduce using rule 63 (procedure)


State 155

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   67 exprs: . expr
   68      | . expr "," exprs
   69      | . expr error exprs
   69      | expr error . exprs
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    exprs          go to state 166
    expr           go to state 118
    term           go to state 53


State 156

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   67 exprs: . expr
   68      | . expr "," exprs
   68      | expr "," . exprs
   69      | . expr error exprs
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    exprs          go to state 167
    expr           go to state 118
    term           go to state 53


State 157

   62 variable: IDENT "[" expr error .

    $default  reduce using rule 62 (variable)


State 158

   61 variable: IDENT "[" expr "]" .

    $default  reduce using rule 61 (variable)


State 159

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   32       | . identifier_list error type ";" params
   32       | identifier_list error type ";" . params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 168


State 160

    8 identifier_list: . IDENT init
    9                | . IDENT init "," identifier_list
   10                | . error
   29 params: . identifier_list ":" type
   30       | . identifier_list error type
   31       | . identifier_list ":" type ";" params
   31       | identifier_list ":" type ";" . params
   32       | . identifier_list error type ";" params

    error  shift, and go to state 19
    IDENT  shift, and go to state 20

    identifier_list  go to state 59
    params           go to state 169


State 161

   49 if: IF expr error stmt . elif else
   50 elif: . ELIF expr ":" stmt elif
   51     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   52     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 170

    ELIF      [reduce using rule 51 (elif)]
    $default  reduce using rule 51 (elif)

    elif  go to state 171


State 162

   48 if: IF expr ":" stmt . elif else
   50 elif: . ELIF expr ":" stmt elif
   51     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   52     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 170

    ELIF      [reduce using rule 51 (elif)]
    $default  reduce using rule 51 (elif)

    elif  go to state 172


State 163

   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt
   57 while: WHILE expr error stmt . else

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 174


State 164

   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt
   56 while: WHILE expr ":" stmt . else

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 175


State 165

   58 for: FOR expr IN expr . ":" stmt else
   59    | FOR expr IN expr . error stmt else
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   82     | expr IN expr .  [ASS, EQUAL, NOTEQU, GREATER, EQUGRE, LESS, EQULESS, IN]
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error  shift, and go to state 176
    ADD    shift, and go to state 96
    SUB    shift, and go to state 97
    MUL    shift, and go to state 98
    DIV    shift, and go to state 99
    ":"    shift, and go to state 177

    ASS      reduce using rule 82 (expr)
    EQUAL    reduce using rule 82 (expr)
    NOTEQU   reduce using rule 82 (expr)
    GREATER  reduce using rule 82 (expr)
    EQUGRE   reduce using rule 82 (expr)
    LESS     reduce using rule 82 (expr)
    EQULESS  reduce using rule 82 (expr)
    IN       reduce using rule 82 (expr)

    룰 82과 토큰 ASS의 충돌이 리듀스로 결정됨 (ASS < IN).
    룰 82과 토큰 EQUAL의 충돌이 리듀스로 결정됨 (%left EQUAL).
    룰 82과 토큰 NOTEQU의 충돌이 리듀스로 결정됨 (%left NOTEQU).
    룰 82과 토큰 GREATER의 충돌이 리듀스로 결정됨 (%left GREATER).
    룰 82과 토큰 EQUGRE의 충돌이 리듀스로 결정됨 (%left EQUGRE).
    룰 82과 토큰 LESS의 충돌이 리듀스로 결정됨 (%left LESS).
    룰 82과 토큰 EQULESS의 충돌이 리듀스로 결정됨 (%left EQULESS).
    룰 82과 토큰 IN의 충돌이 리듀스로 결정됨 (%left IN).
    룰 82과 토큰 ADD의 충돌이 쉬프트로 결정됨 (IN < ADD).
    룰 82과 토큰 SUB의 충돌이 쉬프트로 결정됨 (IN < SUB).
    룰 82과 토큰 MUL의 충돌이 쉬프트로 결정됨 (IN < MUL).
    룰 82과 토큰 DIV의 충돌이 쉬프트로 결정됨 (IN < DIV).


State 166

   69 exprs: expr error exprs .

    $default  reduce using rule 69 (exprs)


State 167

   68 exprs: expr "," exprs .

    $default  reduce using rule 68 (exprs)


State 168

   32 params: identifier_list error type ";" params .

    $default  reduce using rule 32 (params)


State 169

   31 params: identifier_list ":" type ";" params .

    $default  reduce using rule 31 (params)


State 170

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   50 elif: ELIF . expr ":" stmt elif
   52     | ELIF . expr error stmt elif
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER  shift, and go to state 43
    IDENT   shift, and go to state 44
    ADD     shift, and go to state 45
    SUB     shift, and go to state 46
    NOT     shift, and go to state 47
    "("     shift, and go to state 48
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 178
    term           go to state 53


State 171

   49 if: IF expr error stmt elif . else
   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 179


State 172

   48 if: IF expr ":" stmt elif . else
   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 180


State 173

   53 else: ELSE . ":" stmt
   55     | ELSE . error stmt

    error  shift, and go to state 181
    ":"    shift, and go to state 182


State 174

   57 while: WHILE expr error stmt else .

    $default  reduce using rule 57 (while)


State 175

   56 while: WHILE expr ":" stmt else .

    $default  reduce using rule 56 (while)


State 176

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   59    | FOR expr IN expr error . stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 183
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 177

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   58    | FOR expr IN expr ":" . stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 184
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 178

   50 elif: ELIF expr . ":" stmt elif
   52     | ELIF expr . error stmt elif
   71 expr: expr . ASS expr
   72     | expr . GREATER expr
   73     | expr . EQUGRE expr
   74     | expr . LESS expr
   75     | expr . EQULESS expr
   76     | expr . EQUAL expr
   77     | expr . NOTEQU expr
   78     | expr . ADD expr
   79     | expr . SUB expr
   80     | expr . MUL expr
   81     | expr . DIV expr
   82     | expr . IN expr
   86     | expr . ASS error
   87     | expr . GREATER error
   88     | expr . EQUGRE error
   89     | expr . LESS error
   90     | expr . EQULESS error
   91     | expr . EQUAL error
   92     | expr . NOTEQU error
   93     | expr . ADD error
   94     | expr . SUB error
   95     | expr . MUL error
   96     | expr . DIV error
   97     | expr . IN error

    error    shift, and go to state 185
    ASS      shift, and go to state 88
    EQUAL    shift, and go to state 89
    NOTEQU   shift, and go to state 90
    GREATER  shift, and go to state 91
    EQUGRE   shift, and go to state 92
    LESS     shift, and go to state 93
    EQULESS  shift, and go to state 94
    IN       shift, and go to state 95
    ADD      shift, and go to state 96
    SUB      shift, and go to state 97
    MUL      shift, and go to state 98
    DIV      shift, and go to state 99
    ":"      shift, and go to state 186


State 179

   49 if: IF expr error stmt elif else .

    $default  reduce using rule 49 (if)


State 180

   48 if: IF expr ":" stmt elif else .

    $default  reduce using rule 48 (if)


State 181

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   55 else: ELSE error . stmt
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 187
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 182

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   53 else: ELSE ":" . stmt
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 188
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 183

   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt
   59 for: FOR expr IN expr error stmt . else

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 189


State 184

   53 else: . ELSE ":" stmt
   54     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   55     | . ELSE error stmt
   58 for: FOR expr IN expr ":" stmt . else

    ELSE  shift, and go to state 173

    ELSE      [reduce using rule 54 (else)]
    $default  reduce using rule 54 (else)

    else  go to state 190


State 185

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   52 elif: ELIF expr error . stmt elif
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 191
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 186

   14 type: . standard_type
   15     | . standard_type "[" NUMBER "]"
   16     | . standard_type "[" NUMBER error
   17 standard_type: . INT
   18              | . FLOAT
   33 block: . BEG declarations stmts END
   34      | . BEG declarations stmts error
   37 stmt: . stmt_semi ";"
   38     | . stmt_semi error
   39     | . block
   40     | . if
   41     | . while
   42     | . for
   43 stmt_semi: . expr
   44          | . BREAK
   45          | . CONTINUE
   46          | . RETURN expr
   47          | . NOP
   48 if: . IF expr ":" stmt elif else
   49   | . IF expr error stmt elif else
   50 elif: ELIF expr ":" . stmt elif
   56 while: . WHILE expr ":" stmt else
   57      | . WHILE expr error stmt else
   58 for: . FOR expr IN expr ":" stmt else
   59    | . FOR expr IN expr error stmt else
   60 variable: . IDENT
   61         | . IDENT "[" expr "]"
   62         | . IDENT "[" expr error
   63 procedure: . IDENT "(" expr_list ")"
   64          | . IDENT "(" expr_list error
   70 expr: . term
   71     | . expr ASS expr
   72     | . expr GREATER expr
   73     | . expr EQUGRE expr
   74     | . expr LESS expr
   75     | . expr EQULESS expr
   76     | . expr EQUAL expr
   77     | . expr NOTEQU expr
   78     | . expr ADD expr
   79     | . expr SUB expr
   80     | . expr MUL expr
   81     | . expr DIV expr
   82     | . expr IN expr
   83     | . ADD expr
   84     | . SUB expr
   85     | . NOT expr
   86     | . expr ASS error
   87     | . expr GREATER error
   88     | . expr EQUGRE error
   89     | . expr LESS error
   90     | . expr EQULESS error
   91     | . expr EQUAL error
   92     | . expr NOTEQU error
   93     | . expr ADD error
   94     | . expr SUB error
   95     | . expr MUL error
   96     | . expr DIV error
   97     | . expr IN error
   98     | . ADD error
   99     | . SUB error
  100     | . NOT error
  101 term: . NUMBER
  102     | . variable
  103     | . procedure
  104     | . "(" expr ")"
  105     | . "(" expr error
  106     | . type term
  107     | . type

    NUMBER    shift, and go to state 43
    IDENT     shift, and go to state 44
    ADD       shift, and go to state 45
    SUB       shift, and go to state 46
    NOT       shift, and go to state 47
    "("       shift, and go to state 48
    BEG       shift, and go to state 29
    IF        shift, and go to state 63
    CONTINUE  shift, and go to state 64
    NOP       shift, and go to state 65
    WHILE     shift, and go to state 66
    RETURN    shift, and go to state 67
    BREAK     shift, and go to state 68
    FOR       shift, and go to state 69
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8

    type           go to state 49
    standard_type  go to state 11
    block          go to state 70
    stmt           go to state 192
    stmt_semi      go to state 73
    if             go to state 74
    while          go to state 75
    for            go to state 76
    variable       go to state 50
    procedure      go to state 51
    expr           go to state 77
    term           go to state 53


State 187

   55 else: ELSE error stmt .

    $default  reduce using rule 55 (else)


State 188

   53 else: ELSE ":" stmt .

    $default  reduce using rule 53 (else)


State 189

   59 for: FOR expr IN expr error stmt else .

    $default  reduce using rule 59 (for)


State 190

   58 for: FOR expr IN expr ":" stmt else .

    $default  reduce using rule 58 (for)


State 191

   50 elif: . ELIF expr ":" stmt elif
   51     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   52     | . ELIF expr error stmt elif
   52     | ELIF expr error stmt . elif

    ELIF  shift, and go to state 170

    ELIF      [reduce using rule 51 (elif)]
    $default  reduce using rule 51 (elif)

    elif  go to state 193


State 192

   50 elif: . ELIF expr ":" stmt elif
   50     | ELIF expr ":" stmt . elif
   51     | . %empty  [error, NUMBER, IDENT, ADD, SUB, NOT, "(", BEG, END, IF, CONTINUE, ELIF, ELSE, NOP, WHILE, RETURN, BREAK, FOR, INT, FLOAT]
   52     | . ELIF expr error stmt elif

    ELIF  shift, and go to state 170

    ELIF      [reduce using rule 51 (elif)]
    $default  reduce using rule 51 (elif)

    elif  go to state 194


State 193

   52 elif: ELIF expr error stmt elif .

    $default  reduce using rule 52 (elif)


State 194

   50 elif: ELIF expr ":" stmt elif .

    $default  reduce using rule 50 (elif)
